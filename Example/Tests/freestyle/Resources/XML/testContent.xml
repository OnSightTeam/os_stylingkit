<?xml version="1.0"?>
<tests>
  <test name="Groups of selectors">
    <style type="text/css"><![CDATA[li,p { background-color : lime }]]></style>
    <div class="testText">
      <ul>
        <li>The background of this list item should be green</li>
        <li>The background of this second list item should be also green</li>
      </ul>
      <p>The background of this paragraph should be green.</p>
    </div>
  </test>
  <test name="Type element selectors">
    <style type="text/css"><![CDATA[address { background-color: lime }]]></style>
    <div class="testText">
      <address>This address element should have a green background.</address>
    </div>
  </test>
  <test name="Universal selector">
    <style type="text/css"><![CDATA[* { color : lime }
ul, p { color : red }
*.t1 { color : lime }
]]></style>
    <div class="testText">
      <p>
        <span class="t1">This paragraph, and all textual contents in the document, 
      should be green.</span>
      </p>
      <ul>
        <li class="t1">This item should be green.</li>
      </ul>
      <foo xmlns="http://www.example.org/a">And this element, part of a non-HTML namespace,
      should be green too</foo>
    </div>
  </test>
  <test name="Universal selector (no namespaces)">
    <style type="text/css"><![CDATA[* { color : lime }
ul, p { color : red }
*.t1 { color : lime }
]]></style>
    <div class="testText">
      <p>
        <span class="t1">This paragraph, and all textual contents in the document, 
      should be green.</span>
      </p>
      <ul>
        <li class="t1">This item should be green.</li>
      </ul>
    </div>
  </test>
  <test name="Omitted universal selector">
    <style type="text/css"><![CDATA[#foo { background-color : lime }
p { background-color : red }]]></style>
    <div class="testText">
      <p id="foo">This paragraph should have a green background</p>
    </div>
  </test>
  <test name="Attribute existence selector">
    <style type="text/css"><![CDATA[p { background-color : red }
p[title] { background-color : lime }]]></style>
    <div class="testText">
      <p title="title">This paragraph should have a green background because its TITLE
      attribute is set.</p>
    </div>
  </test>
  <test name="Attribute value selector">
    <style type="text/css"><![CDATA[address { background-color : red }
address[title="foo"] { background-color : lime }
span[title="a"] { background-color : red }]]></style>
    <div class="testText">
      <address title="foo">
        <span title="b">This line should </span>
        <span title="aa">have a green background.
</span>
      </address>
    </div>
  </test>
  <test name="Attribute multivalue selector">
    <style type="text/css"><![CDATA[p { background-color : red }
p[class~="b"] { background-color : lime }
address { background-color : red }
address[title~="foo"] { background-color : lime }
span[class~="b"] { background-color : red }]]></style>
    <div class="testText">
      <p class="a b c">This paragraph should have green background because CLASS
  contains "b"</p>
      <address title="tot foo bar">
        <span class="a c">This address should also</span>
        <span class="a bb c">have green background because the selector in the last
    rule does not apply to the inner SPANs.</span>
      </address>
    </div>
  </test>
  <test name="Attribute multivalue selector">
    <style type="text/css"><![CDATA[
p { background: lime; }
[title~="hello world"] { background: red; }
/* Section 6.3.1: Represents the att attribute whose value is a
space-separated list of words, one of which is exactly "val". If this
selector is used, the words in the value must not contain spaces
(since they are separated by spaces). */
]]></style>
    <div class="testText">
      <p title="hello world">This line should have a green background.</p>
    </div>
  </test>
  <test name="Attribute value selectors (hyphen-separated attributes)">
    <style type="text/css"><![CDATA[p { background-color : red }
p[lang|="en"] { background-color : lime }
address { background-color : red }
address[lang="fi"] { background-color : lime }
span[lang|="fr"] { background-color : red }]]></style>
    <div class="testText">
      <p lang="en-gb">This paragraph should have green background because its language is "en-gb"</p>
      <address lang="fi">
        <span lang="en-us">This address should also</span>
        <span lang="en-fr">have green background because the language of the inner SPANs
     is not French.</span>
      </address>
    </div>
  </test>
  <test name="Substring matching attribute selector (beginning)">
    <style type="text/css"><![CDATA[p { background-color : red }
p[title^="foo"] { background-color : lime }]]></style>
    <div class="testText">
      <p title="foobar">This paragraph should have a green background<br/>
because its title attribute begins with "foo"</p>
    </div>
  </test>
  <test name="Substring matching attribute selector (end)">
    <style type="text/css"><![CDATA[p { background-color : red }
p[title$="bar"] { background-color : lime }]]></style>
    <div class="testText">
      <p title="foobar">This paragraph should have a green background because
its title attribute ends with "bar"</p>
    </div>
  </test>
  <test name="Substring matching attribute selector (contains)">
    <style type="text/css"><![CDATA[p { background-color : red }
p[title*="bar"] { background-color : lime }]]></style>
    <div class="testText">
      <p title="foobarufoo">This paragraph should have a green background because
its title attribute contains "bar"</p>
    </div>
  </test>
  <test name="Class selectors">
    <style type="text/css"><![CDATA[li { background-color : red }
.t1 { background-color : lime }
li.t2 { background-color : lime }
.t3 { background-color : red }]]></style>
    <div class="testText">
      <ul>
        <li class="t1">This list item should have green background because its class is "t1"</li>
        <li class="t2">This list item should have green background because its class is "t2"</li>
        <li class="t2">
          <span class="t33">This list item should have green background because 
        the inner SPAN does not match SPAN.t3</span>
        </li>
      </ul>
    </div>
  </test>
  <test name="More than one class selector">
    <style type="text/css"><![CDATA[p { background-color : red ; border : thick solid red ; padding : 1em }
p.t1 { background-color : lime }
p.t2 { border : thick solid green }

div { background: green; color: white; }
div.teST { background: red; color: yellow; }
div.te { background: red; color: yellow; }
div.st { background: red; color: yellow; }
div.te.st { background: red; color: yellow; }]]></style>
    <div class="testText">
      <p class="t1 t2">This paragraph
should have a green background and a green thick solid border because
it carries both classes t1 and t2.</p>
      <div class="test">This line
should be green.</div>
    </div>
  </test>
  <test name="More than one class selector">
    <style type="text/css"><![CDATA[
p { background: green; color: white; }
.t1.fail { background: red; color: yellow; }
.fail.t1 { background: red; color: yellow; }
.t2.fail { background: red; color: yellow; }
.fail.t2 { background: red; color: yellow; }
/* Note: This is a valid test even per CSS1, since in CSS1 those rules
         are invalid and should be dropped. */
]]></style>
    <div class="testText">
      <p class="t1">This line should be green.</p>
      <p class="t1 t2">This line should be green.</p>
    </div>
  </test>
  <test name="More than one class selector">
    <style type="text/css"><![CDATA[
p { background: red; color: yellow; }
p.t1.t2 { background: green; color: white; }
div { background: green; color: white; }
div.t1 { background: red; color: yellow; }
address { background: red; color: yellow; }
address.t5.t5 { background: green; color: white; }
]]></style>
    <div class="testText">
      <p class="t1 t2">This line should be green.</p>
      <div class="t3">This line should be green.</div>
      <address class="t4 t5 t6">This line should be green.</address>
    </div>
  </test>
  <test name="NEGATED More than one class selector">
    <style type="text/css"><![CDATA[
p { background: green; color: white; }
.t1:not(.t2) { background: red; color: yellow; }
:not(.t2).t1 { background: red; color: yellow; }
.t2:not(.t1) { background: red; color: yellow; }
:not(.t1).t2 { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p class="t1 t2">This line should be green.</p>
    </div>
  </test>
  <test name="NEGATED More than one class selector">
    <style type="text/css"><![CDATA[
p { background: green; color: white; }
p:not(.t1):not(.t2) { background: red; color: yellow; }
div { background: red; color: yellow; }
div:not(.t1) { background: green; color: white; }
address { background: green; color: white; }
address:not(.t5):not(.t5) { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p class="t1 t2">This line should be green.</p>
      <div class="t3">This line should be green.</div>
      <address class="t4 t5 t6">This line should be green.</address>
    </div>
  </test>
  <test name="ID selectors">
    <style type="text/css"><![CDATA[li { background-color : red }
#t1 { background-color : lime }
li#t2 { background-color : lime }
li#t3 { background-color : lime }
#t4 { background-color : red }]]></style>
    <div class="testText">
      <ul>
        <li id="t1">This list item should have a green background. because its ID is "t1"</li>
        <li id="t2">This list item should have a green background. because its ID is "t2"</li>
        <li id="t3">
          <span id="t44">This list item should have a green background. because the inner SPAN does not match "#t4"</span>
        </li>
      </ul>
    </div>
  </test>
  <test name="Multiple ID selectors">
    <style type="text/css"><![CDATA[
p { background: green; color: white; }
#test#fail { background: red; color: yellow; }
#fail#test { background: red; color: yellow; }
#fail { background: red; color: yellow; }
div { background: red; color: yellow; }
#pass#pass { background: green; color: white; }
]]></style>
    <div class="testText">
      <p id="test">This line should be green.</p>
      <div id="pass">This line should be green.</div>
    </div>
  </test>
  <test name="Multiple IDs">
    <style type="text/css"><![CDATA[
.warning { color: navy; }
div { color: red; }
#Aone#Atwo, #Aone#Athree, #Atwo#Athree { color: green; }
p { color: green; }
#Bone#Btwo, #Bone#Bthree, #Btwo#Bthree { color: red; }
#Cone#Ctwo, #Cone#Cthree, #Ctwo#Cthree { color: red; }
#Done#Dtwo, #Done#Dthree, #Dtwo#Dthree { color: red; }
]]></style>
    <div class="testText">
      <p class="warning">This test requires support for two or more of XHTML, xml:id, and DOM3 Core.</p>
      <div id="Aone" title="Athree" xml:id="Atwo">This line should be green.</div>
      <p id="Bone">This line should be green.</p>
      <p xml:id="Ctwo">This line should be green.</p>
      <p title="Dthree">This line should be green.</p>
      <script type="text/javascript">
  document.getElementsByTagNameNS('http://www.w3.org/1999/xhtml', 'div')[0].setIdAttribute('title', true);
  document.getElementsByTagNameNS('http://www.w3.org/1999/xhtml', 'p')[3].setIdAttribute('title', true);
 </script>
      <!-- This test could also be done using a custom DOCTYPE with an internal subset, which would
      then work in any XHTML UA. However, that requires massive changes to the generator scripts.
      Better, if we need such a test, would be to special-case it and have 15d be a separate file. -->
    </div>
  </test>
  <test name=":link pseudo-class">
    <style type="text/css"><![CDATA[p.test a { background-color : red }
p.test *:link { background-color : lime }]]></style>
    <div class="testText">
      <p class="test"><a href="http://unvisited.example.org/css3-modsel-16/">This link should have green background.</a>
(Don't follow this link.)
</p>
    </div>
  </test>
  <test name=":visited pseudo-class">
    <style type="text/css"><![CDATA[p.test a { background-color : red }
p.test *:visited { background-color : lime }]]></style>
    <div class="testText">
      <p class="test"><a href="http://www.w3.org/">You should see a green background assigned by the anchor.</a>
(Note: You must have visited http://www.w3.org/ for this test to be valid.)
</p>
    </div>
  </test>
  <test name=":hover pseudo-class">
    <style type="text/css"><![CDATA[p:hover { background-color : lime }
a:hover { background-color : lime }

tr:hover { background-color : green }
td:hover { background-color : lime }

table { border-spacing: 5px; }]]></style>
    <div class="testText">
      <p>The background color of this paragraph should turn to green when
   the mouse pointer hovers either its text (<strong>here</strong>) or its whitespace background, <strong>here</strong>:</p>
      <address>The background color of <a href="#foo">this anchor (<strong>here</strong>)</a> should turn to green when the pointing device hovers over it.</address>
      <table>
        <tbody>
          <tr>
            <td>The cells in</td>
            <td>this table</td>
            <td>should go</td>
          </tr>
          <tr>
            <td>green when</td>
            <td>you hover</td>
            <td>the pointing</td>
          </tr>
          <tr>
            <td>device over</td>
            <td>them (<strong>here</strong>).</td>
            <td/>
          </tr>
          <tr>
            <td>The rows in</td>
            <td>this table</td>
            <td>should go</td>
          </tr>
          <tr>
            <td>dark green</td>
            <td>when the</td>
            <td>pointing device</td>
          </tr>
          <tr>
            <td>is over the</td>
            <td>cells <strong>there</strong>:</td>
            <td/>
            <!-- remove this cell to make an evil test; row should still go green, but cell should not -->
          </tr>
          <tr>
            <td>And <strong>here</strong>:</td>
            <td/>
            <td>(blank cells).</td>
          </tr>
        </tbody>
      </table>
    </div>
  </test>
  <test name=":hover pseudo-class on links">
    <style type="text/css"><![CDATA[
p { color: navy; }

.a a:hover { background: green; color: white; }

.b a:hover { background: red; color: yellow; }
.b a:link { background: green; color: white; }

.c :link { background: green; color: white; }
.c :visited:hover { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p class="a">The background color of <a href="#foo">this anchor (<strong>here</strong>)</a> should turn to green when the pointing device hovers over it.</p>
      <p class="b">The background color of <a href="#foo">this anchor (<strong>here</strong>)</a> should <strong>remain green when you hover it</strong>.</p>
      <p class="c">The background color of <a href="http://link.example.com/">this anchor (<strong>here</strong>)</a> should <strong>remain green when the pointing device hovers over it</strong> (do not follow that link).</p>
    </div>
  </test>
  <test name=":hover pseudo-class">
    <style type="text/css"><![CDATA[div:hover > p:first-child { background-color : lime }]]></style>
    <div class="testText">
      <div>
        <p>The background color of this paragraph should turn to green when the mouse pointer hovers over any of the following:<br/><strong>This text.</strong></p>
        <p>This text.</p>
        <table>
          <tr>
            <td>
              <table>
                <tr>
                  <td>
                    <dl>
                      <dt>This text.</dt>
                      <dd>This text.</dd>
                    </dl>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr>
            <td>This text.</td>
          </tr>
        </table>
        <p>
          <sub>This text.</sub>
        </p>
        <p>...and anything else between the top of the first paragraph and the bottom of this paragraph.</p>
      </div>
    </div>
  </test>
  <test name=":hover pseudo-class on links">
    <style type="text/css"><![CDATA[
:link, :visited { color: navy; text-decoration: none; }
:link:hover span { background-color : lime }
]]></style>
    <div class="testText">
      <p>
        <a href="#foo">Hover <strong>here</strong> and the background of <span>this text should go green</span>.</a>
      </p>
    </div>
  </test>
  <test name=":active pseudo-class">
    <style type="text/css"><![CDATA[a:active { background-color : lime }]]></style>
    <div class="testText">
      <p>The background color of <a href="#foo">the anchor</a>
   should turn to green when it is activated and come back to
   normal when it is released.</p>
    </div>
  </test>
  <test name=":active pseudo-class on controls">
    <style type="text/css"><![CDATA[button:active { background: green; color: white; }]]></style>
    <div class="testText">
      <p>
        <button>Activating (e.g. holding the mouse button down on) this button should make it go green.</button>
      </p>
    </div>
  </test>
  <test name=":focus pseudo-class">
    <style type="text/css"><![CDATA[a:focus { background-color : lime }]]></style>
    <div class="testText">
      <p>The background color of <a href="#foo">anchors</a>
  in this page should turn <a href="#foo">to green</a> when they have the
  <a href="#foo">focus</a>.</p>
    </div>
  </test>
  <test name=":target pseudo-class">
    <style type="text/css"><![CDATA[p:target { background-color : lime }]]></style>
    <div class="testText">
      <p id="first">This paragraph should be unstyled.
       The background of the following paragraph should become green when
       you follow <a href="#second">this link</a>.</p>
      <p id="second">This paragraph should initially be unstyled.
       It should become green when you select the link above. When you select
       <a href="#third">this link</a>, it should return to being unstyled and the 
       background of the paragraph below should become green.</p>
      <p id="third">This paragraph should initially be unstyled.
       It should become green when you select the link above. When you follow
       <a href="#missing">this link</a>, the three paragraphs
       should all return to being unstyled.</p>
    </div>
  </test>
  <test name=":target pseudo-class">
    <style type="text/css"><![CDATA[p { background-color: lime; }
p:target { background-color: red; }]]></style>
    <div class="testText">
      <p>This paragraph should be green.</p>
    </div>
  </test>
  <test name=":target pseudo-class">
    <style type="text/css"><![CDATA[:root { background-color: green; }
:target { background-color: red; }]]></style>
    <div class="testText">
      <p>This page should be green.</p>
    </div>
  </test>
  <test name=":lang() pseudo-class">
    <style type="text/css"><![CDATA[ul > li { background-color : red }
li:lang(en-GB) { background-color : lime }]]></style>
    <div class="testText">
      <ul>
        <li lang="en-GB">This list item should be green because its language is
        British English</li>
        <li lang="en-GB-wa">This list item should be green because its language
        is British English (Wales)</li>
      </ul>
      <ol>
        <li lang="en-US">This list item should NOT be green because its language
       is US English</li>
        <li lang="fr">This list item should NOT be green because its language is
       French</li>
      </ol>
    </div>
  </test>
  <test name=":enabled pseudo-class">
    <style type="text/css"><![CDATA[button { background-color : red }
input { background-color : red }
button:enabled { background-color : lime }
input:enabled { background-color : lime }]]></style>
    <div class="testText">
      <p>
        <button>A button (enabled) with green background</button>
        <br/>
        <input size="36" type="text" value="a text area (enabled) with green background"/>
      </p>
    </div>
  </test>
  <test name=":disabled pseudo-class">
    <style type="text/css"><![CDATA[button { background-color : red }
input { background-color : red }
button:disabled { background-color : lime }
input:disabled { background-color : lime }]]></style>
    <div class="testText">
      <p>
        <button disabled="disabled">A button (disabled) with green background</button>
        <br/>
        <input disabled="disabled" size="36" type="text" value="a text area (disabled) with green background"/>
      </p>
    </div>
  </test>
  <test name=":checked pseudo-class">
    <style type="text/css"><![CDATA[input, span { background-color : red }
input:checked, input:checked + span { background-color : lime}
]]></style>
    <div class="testText">
      <p>
        <input checked="checked" type="checkbox"/>
        <span>Everything in this paragraph should have a green background</span>
      </p>
    </div>
  </test>
  <test name=":root pseudo-class">
    <style type="text/css"><![CDATA[html { background-color : red }
*:root { background-color: lime }]]></style>
    <div class="testText">
      <p>The background of the document should be green</p>
    </div>
  </test>
  <test name="Impossible rules (:root:first-child, etc)">
    <style type="text/css"><![CDATA[
:root:first-child { background-color: red; }
:root:last-child { background-color: red; }
:root:only-child { background-color: red; }
:root:nth-child(1) { background-color: red; }
:root:nth-child(n) { background-color: red; }
:root:nth-last-child(1) { background-color: red; }
:root:nth-last-child(n) { background-color: red; }
:root:first-of-type { background-color: red; }
:root:last-of-type { background-color: red; }
:root:only-of-type { background-color: red; }
:root:nth-of-type(1) { background-color: red; }
:root:nth-of-type(n) { background-color: red; }
:root:nth-last-of-type(1) { background-color: red; }
:root:nth-last-of-type(n) { background-color: red; }
p { color: green; }]]></style>
    <div class="testText">
      <p>This line should be green (there should be no red on this page).</p>
    </div>
  </test>
  <test name="Impossible rules (* html, * :root)">
    <style type="text/css"><![CDATA[* html { background-color: red; }
* :root { background-color: red; }
p { color: green; }]]></style>
    <div class="testText">
      <p>This line should be green (there should be no red on this page).</p>
    </div>
  </test>
  <test name=":nth-child() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
ul > li:nth-child(odd) { background-color : lime }
ol > li:nth-child(even) { background-color : lime }
table.t1 tr:nth-child(-n+4) { background-color : lime }
table.t2 td:nth-child(3n+1) { background-color : lime }]]></style>
    <div class="testText">
      <ul>
        <li class="red">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="red">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="red">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ul>
      <ol>
        <li>First list item</li>
        <li class="red">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="red">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="red">This sixth list item should have a green background</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr class="red">
            <td>Green row : 1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr>
            <td>5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr>
            <td>6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <table border="1" class="t2">
          <tr>
            <td class="red">green cell</td>
            <td>1.2</td>
            <td>1.3</td>
            <td class="red">green cell</td>
            <td>1.5</td>
            <td>1.6</td>
            <td class="red">green cell</td>
            <td>1.8</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>2.2</td>
            <td>2.3</td>
            <td class="red">green cell</td>
            <td>2.5</td>
            <td>2.6</td>
            <td class="red">green cell</td>
            <td>2.8</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>3.2</td>
            <td>3.3</td>
            <td class="red">green cell</td>
            <td>3.5</td>
            <td>3.6</td>
            <td class="red">green cell</td>
            <td>3.8</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name=":nth-child() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
ul > li:nth-child(odd) { background-color : red }
ol > li:nth-child(even) { background-color : red }
table.t1 tr:nth-child(-n+4) { background-color : red }
table.t2 td:nth-child(3n+1) { background-color : red }]]></style>
    <div class="testText">
      <ul>
        <li class="green">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="green">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="green">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ul>
      <ol>
        <li>First list item</li>
        <li class="green">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="green">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="green">This sixth list item should have a green background</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr class="green">
            <td>Green row : 1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr>
            <td>5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr>
            <td>6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td class="green">green cell</td>
            <td>1.2</td>
            <td>1.3</td>
            <td class="green">green cell</td>
            <td>1.5</td>
            <td>1.6</td>
            <td class="green">green cell</td>
            <td>1.8</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td>2.2</td>
            <td>2.3</td>
            <td class="green">green cell</td>
            <td>2.5</td>
            <td>2.6</td>
            <td class="green">green cell</td>
            <td>2.8</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td>3.2</td>
            <td>3.3</td>
            <td class="green">green cell</td>
            <td>3.5</td>
            <td>3.6</td>
            <td class="green">green cell</td>
            <td>3.8</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name=":nth-last-child() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
ul > li:nth-last-child(odd) { background-color : green }
ol > li:nth-last-child(even) { background-color : green }
table.t1 tr:nth-last-child(-n+4) { background-color : green }
table.t2 td:nth-last-child(3n+1) { background-color : green }]]></style>
    <div class="testText">
      <ul>
        <li>First list item</li>
        <li class="red">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="red">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="red">This sixth list item should have a green background</li>
      </ul>
      <ol>
        <li class="red">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="red">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="red">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td>1.1</td>
            <td class="red">green cell</td>
            <td>1.3</td>
            <td>1.4</td>
            <td class="red">green cell</td>
            <td>1.6</td>
            <td>1.7</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="red">green cell</td>
            <td>2.3</td>
            <td>2.4</td>
            <td class="red">green cell</td>
            <td>2.6</td>
            <td>2.7</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="red">green cell</td>
            <td>3.3</td>
            <td>3.4</td>
            <td class="red">green cell</td>
            <td>3.6</td>
            <td>3.7</td>
            <td class="red">green cell</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name=":nth-last-child() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
ul > li:nth-last-child(odd) { background-color : red }
ol > li:nth-last-child(even) { background-color : red }
table.t1 tr:nth-last-child(-n+4) { background-color : red }
table.t2 td:nth-last-child(3n+1) { background-color : red }]]></style>
    <div class="testText">
      <ul>
        <li>First list item</li>
        <li class="green">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="green">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="green">This sixth list item should have a green background</li>
      </ul>
      <ol>
        <li class="green">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="green">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="green">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td>1.1</td>
            <td class="green">green cell</td>
            <td>1.3</td>
            <td>1.4</td>
            <td class="green">green cell</td>
            <td>1.6</td>
            <td>1.7</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="green">green cell</td>
            <td>2.3</td>
            <td>2.4</td>
            <td class="green">green cell</td>
            <td>2.6</td>
            <td>2.7</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="green">green cell</td>
            <td>3.3</td>
            <td>3.4</td>
            <td class="green">green cell</td>
            <td>3.6</td>
            <td>3.7</td>
            <td class="green">green cell</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name=":nth-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:nth-of-type(3) { background-color : lime }
dl > :nth-of-type(3n+1) { background-color : lime }
]]></style>
    <div class="testText">
      <p>This paragraph is here only to fill space in the DOM</p>
      <address>And this address too..</address>
      <p>So does this paragraph !</p>
      <p class="red">But this one should have green background</p>
      <dl>
        <dt class="red">First definition term that should have green background</dt>
        <dd class="red">First definition that should have green background</dd>
        <dt>Second definition term</dt>
        <dd>Second definition</dd>
        <dt>Third definition term</dt>
        <dd>Third definition</dd>
        <dt class="red">Fourth definition term that should have green background</dt>
        <dd class="red">Fourth definition that should have green background</dd>
        <dt>Fifth definition term</dt>
        <dd>Fifth definition</dd>
        <dt>Sixth definition term</dt>
        <dd>Sixth definition</dd>
      </dl>
    </div>
  </test>
  <test name=":nth-last-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:nth-last-of-type(3) { background-color : lime }
dl > :nth-last-of-type(3n+1) { background-color : lime }
]]></style>
    <div class="testText">
      <p class="red">This paragraph should have green background</p>
      <address>But this address is here only to fill space in the dom..</address>
      <p>So does this paragraph !</p>
      <p>And so does this one too.</p>
      <dl>
        <dt>First definition term</dt>
        <dd>First definition</dd>
        <dt>Second definition term</dt>
        <dd>Second definition</dd>
        <dt class="red">Third definition term that should have green background</dt>
        <dd class="red">Third definition that should have green background</dd>
        <dt>Fourth definition term</dt>
        <dd>Fourth definition</dd>
        <dt>Fifth definition term</dt>
        <dd>Fifth definition</dd>
        <dt class="red">Sixth definition term that should have green background</dt>
        <dd class="red">Sixth definition that should have green background</dd>
      </dl>
    </div>
  </test>
  <test name=":first-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 td:first-child { background-color : lime }
p > *:first-child { background-color : lime }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td class="red">green cell</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
        </table>
      </div>
      <p>This paragraph contains some text
          <span>and a span that should have a green background</span>
</p>
    </div>
  </test>
  <test name=":last-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 td:last-child { background-color : lime }
p > *:last-child { background-color : lime }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td>1.2</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td>2.2</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td>3.2</td>
            <td class="red">green cell</td>
          </tr>
        </table>
      </div>
      <p><span>This paragraph contains a span that should
     have a green background</span> and some text after it.</p>
    </div>
  </test>
  <test name=":first-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
address { margin-bottom : 1em ; margin-left : 1em }
address:first-of-type { background-color : lime }
]]></style>
    <div class="testText">
      <div>This div contains 3 addresses:
<address class="red">A first address that should have a green background</address>
<address>A second address with normal background</address>
<address>A third address with normal background</address>
</div>
    </div>
  </test>
  <test name=":last-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
address { margin-bottom : 1em ; margin-left : 1em }
address:last-of-type { background-color : lime }
]]></style>
    <div class="testText">
      <div><address>A first address with normal background</address><address>A second address with normal background</address><address class="red">A third address that should have a green background</address>
This div contains 3 addresses above this sentence.</div>
    </div>
  </test>
  <test name=":only-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:only-child { background-color : lime }
div.testText > div > p { margin-left : 1em }
]]></style>
    <div class="testText">
      <p>This paragraph should have normal background</p>
      <div>This div contains only one paragraph
    <p class="red">This paragraph should have green background</p>
</div>
    </div>
  </test>
  <test name=":only-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 :only-of-type { background-color : lime }
]]></style>
    <div class="testText">
      <div class="t1">
        <p>This paragraph should have normal background</p>
        <address class="red">But this address should have green background</address>
        <p>This paragraph should have normal background</p>
      </div>
    </div>
  </test>
  <test name="::first-line pseudo-element">
    <style type="text/css"><![CDATA[p:first-line { background-color : lime }
]]></style>
    <div class="testText">
      <p>This very long paragraph should have a
      first line with green background. This very long paragraph should have a first
      line with green background.  This very long paragraph should have a first line
      with green background. This very long paragraph should have a first line with
      green background. This very long paragraph should have a first line with green
      background. This very long paragraph should have a first line with green background.
      This very long paragraph should have a first line with green background.</p>
    </div>
  </test>
  <test name="::first-letter pseudo-element">
    <style type="text/css"><![CDATA[p:first-letter { font-size : xx-large ; background-color : lime }]]></style>
    <div class="testText">
      <p>This very long paragraph
should have a big first letter T with a green background. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text.</p>
    </div>
  </test>
  <test name="::first-letter pseudo-element with ::before pseudo-element">
    <style type="text/css"><![CDATA[p:first-letter { color: lime; font-size: xx-large; }
p:before { color: red; content: 'T'; }]]></style>
    <div class="testText">
      <p>his very long paragraph should
have a big green first letter T.  Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text.</p>
    </div>
  </test>
  <test name="::first-letter pseudo-element">
    <style type="text/css"><![CDATA[p::first-letter { font-size : xx-large ; background-color : lime }]]></style>
    <div class="testText">
      <p>This very long paragraph
should have a big first letter T with a green background.  Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text.</p>
    </div>
  </test>
  <test name="::first-letter pseudo-element with ::before pseudo-element">
    <style type="text/css"><![CDATA[p::first-letter { color: lime; font-size: xx-large; }
 p::before { color: red; content: 'T'; }]]></style>
    <div class="testText">
      <p>his very long paragraph should
have a big green first letter T. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text. Dummy text. Dummy
text. Dummy text. Dummy text. Dummy text.</p>
    </div>
  </test>
  <test name="::before pseudo-element">
    <style type="text/css"><![CDATA[p::before { background-color : lime ; content : "GENERATED CONTENT "}
]]></style>
    <div class="testText">
      <p>You should see before this paragraph the words GENERATED CONTENT over green background</p>
    </div>
  </test>
  <test name=":before pseudo-element">
    <style type="text/css"><![CDATA[p:before { background-color : lime ; content : "GENERATED CONTENT "}
]]></style>
    <div class="testText">
      <p>You should see before this paragraph the words GENERATED CONTENT over green background</p>
    </div>
  </test>
  <test name="::after pseudo-element">
    <style type="text/css"><![CDATA[p::after { background-color : lime ; content : "GENERATED CONTENT "}
]]></style>
    <div class="testText">
      <p>You should see after this paragraph the words GENERATED CONTENT over green background</p>
    </div>
  </test>
  <test name=":after pseudo-element">
    <style type="text/css"><![CDATA[p:after { background-color : lime ; content : "GENERATED CONTENT "}
]]></style>
    <div class="testText">
      <p>You should see after this paragraph the words GENERATED CONTENT over green background</p>
    </div>
  </test>
  <test name="Descendant combinator">
    <style type="text/css"><![CDATA[.white { background-color: transparent ! important; }
.red { background-color: red; }
div.t1 p { background-color: lime; }]]></style>
    <div class="testText">
      <div class="t1">
        <p class="red">This paragraph should have a green background</p>
        <table>
          <tbody>
            <tr>
              <td>
                <p class="red">This paragraph should have a green background</p>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <table>
        <tbody>
          <tr>
            <td>
              <p class="white">This paragraph should be unstyled.</p>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </test>
  <test name="Descendant combinator">
    <style type="text/css"><![CDATA[.white { background-color: transparent ! important; }
.green { background-color: lime; }
div.t1 p { background-color: red; }]]></style>
    <div class="testText">
      <div class="t1">
        <p class="white">This paragraph should be unstyled</p>
        <table>
          <tbody>
            <tr>
              <td>
                <p class="white">This paragraph should be unstyled</p>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <table>
        <tbody>
          <tr>
            <td>
              <p class="green">This paragraph should have a green background</p>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </test>
  <test name="Child combinator">
    <style type="text/css"><![CDATA[.white { background-color: transparent ! important; }
.red { background-color: red; }
div > p.test { background-color: lime; }]]></style>
    <div class="testText">
      <div>
        <p class="red test">This paragraph should have a green background</p>
        <div>
          <p class="red test">This paragraph should have a green background</p>
        </div>
      </div>
      <table>
        <tbody>
          <tr>
            <td>
              <p class="white test">This paragraph should be unstyled.</p>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </test>
  <test name="Child combinator">
    <style type="text/css"><![CDATA[.white { background-color: transparent ! important; }
.green { background-color: lime; }
div > p.test { background-color: red; }]]></style>
    <div class="testText">
      <div>
        <p class="white test">This paragraph should be unstyled.</p>
        <div>
          <p class="white test">This paragraph should be unstyled.</p>
        </div>
      </div>
      <table>
        <tbody>
          <tr>
            <td>
              <p class="green test">This paragraph should have a green background.</p>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </test>
  <test name="Child combinator and classes">
    <style type="text/css"><![CDATA[
  .fail > div { background: red; color: yellow; }
  .control { background: green; color: white; }
]]></style>
    <div class="testText">
      <div> This should be unstyled. </div>
      <div class="control"> This should have a green background. </div>
    </div>
  </test>
  <test name="Child combinatior and IDs">
    <style type="text/css"><![CDATA[
  #fail > div { background: red; }
  p { background: green; }
]]></style>
    <div class="testText">
      <div> This should be unstyled. </div>
      <p> This should have a green background. </p>
    </div>
  </test>
  <test name="Direct adjacent combinator">
    <style type="text/css"><![CDATA[.red { background-color : red }
div.stub > p + p { background-color : lime }]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be unstyled.</p>
        <p class="red">But this one should have a green background.</p>
        <p class="red">And this one should also have a green background.</p>
        <address>This address is only here to fill some space between two paragraphs.</address>
        <p>This paragraph should be unstyled.</p>
      </div>
    </div>
  </test>
  <test name="Direct adjacent combinator">
    <style type="text/css"><![CDATA[.green { background-color: lime; }
.white { background-color: transparent ! important; }
div.stub > p + p { background-color: red; }]]></style>
    <div class="testText">
      <div class="stub">
        <p class="green">This paragraph should have a green background.</p>
        <p class="white">But this one should be unstyled.</p>
        <p class="white">And this one should also be unstyled.</p>
        <address class="green">This address is only here to fill some space between two paragraphs and should have a green background.</address>
        <p class="green">This paragraph should have a green background too.</p>
      </div>
    </div>
  </test>
  <test name="Direct adjacent combinator and classes">
    <style type="text/css"><![CDATA[
  .fail + div { background: red; }
  .control { background: lime; }
]]></style>
    <div class="testText">
      <div> This should be unstyled. </div>
      <div class="control"> This should have a green background. </div>
    </div>
  </test>
  <test name="Indirect adjacent combinator">
    <style type="text/css"><![CDATA[.red { background-color : red }
div.stub > p ~ p { background-color : lime }]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be unstyled.</p>
        <p class="red">But this one should have a green background</p>
        <p class="red">And this one should also have a green background</p>
        <address>This address is only here to fill some space between two paragraphs</address>
        <p class="red">This paragraph should have a green background</p>
      </div>
    </div>
  </test>
  <test name="Indirect adjacent combinator">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
div.stub > p ~ p { background-color : red }]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be unstyled.</p>
        <p class="green">But this one should have a green background</p>
        <p class="green">And this one should also have a green background</p>
        <address>This address is only here to fill some space between two paragraphs</address>
        <p class="green">This paragraph should have a green background</p>
      </div>
    </div>
  </test>
  <test name="NEGATED type element selector">
    <style type="text/css"><![CDATA[div.stub span, div.stub address, div.stub *|q, div.stub *|r { background-color: red; }
address, *|q, *|r { display: block; margin: 1em; }
div.stub *:not(p) { background-color: lime; }]]></style>
    <div class="testText">
      <div class="stub">
        <p>
          <span>The text in this paragraph should have a green background</span>
        </p>
        <address>This address should have a green background</address>
        <q xmlns="http://www.example.org/a">This element in another namespace should have a green background.</q>
        <r xmlns="">This element without a namespace should have a green background.</r>
        <p>This paragraph should be unstyled.</p>
      </div>
    </div>
  </test>
  <test name="NEGATED universal selector">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { background-color : lime ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not(*) { background-color : red }
/* yes, the rule just above selects nothing... That's the point */
]]></style>
    <div class="testText">
      <div class="stub">
        <address>This address should have a green background</address>
        <s xmlns="http://www.example.org/b">This paragraph should have a green background</s>
        <t xmlns="">This paragraph should have a green background</t>
        <u xmlns="http://www.example.org/a">This paragraph should have a green background</u>
      </div>
    </div>
  </test>
  <test name="NEGATED omitted universal selector is forbidden">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { background-color : lime ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not() { background-color : red }
/* yes, the rule just above selects nothing... That's the point */
]]></style>
    <div class="testText">
      <div class="stub">
        <address>This address should have a green background</address>
        <s xmlns="http://www.example.org/b">This paragraph should have a green background</s>
        <t xmlns="">This paragraph should have a green background</t>
        <u xmlns="http://www.example.org/a">This paragraph should have a green background</u>
      </div>
    </div>
  </test>
  <test name="NEGATED attribute existence selector">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
a|* { color : red ; display : block ; margin-bottom : 1em }
div.stub *|*:not([test]) { color : lime }]]></style>
    <div class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" test="1">
          <r>This text should be in green characters</r>
        </q>
        <s xmlns="http://www.example.org/a">This text should be in green characters</s>
      </div>
    </div>
  </test>
  <test name="NEGATED attribute value selector">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
div.stub > p {color : red }
div.stub > a|* { color : red ; display : block ; margin-bottom : 1em }
div.stub *|*:not([test="1"]) { color : lime }]]></style>
    <div class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" test="1">
          <r test="11">This text should be</r>
          <r>in green characters</r>
        </q>
        <s xmlns="http://www.example.org/a">This text should be in green characters</s>
        <p>This text should be in green characters</p>
      </div>
    </div>
  </test>
  <test name="NEGATED attribute space-separated value selector">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub p { color : red }
div.stub > a|*, div.stub > b|* { color : red ; display : block ; margin-bottom : 1em }
div.stub *|*:not([test~="foo"]) { color : lime }
div.stub *|p:not([class~="foo"]) { color : lime }
div.stub b|*[test~="foo2"] { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" test="bar foo tut">
          <r test="tut foofoo bar">This text should be</r>
          <r>in green characters</r>
        </q>
        <s xmlns="http://www.example.org/a" test="bar tut">This text should be in green characters</s>
        <t xmlns="http://www.example.org/a">This text should be in green characters</t>
        <p class="tit foo1 tut">This text should be in green characters</p>
        <u xmlns="http://www.example.org/b" test="tit foo2 tut">This text should be in green characters</u>
      </div>
    </div>
  </test>
  <test name="NEGATED attribute dash-separated value selector">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub p { color : red }
div.stub > a|*, div.stub > b|* { color : red ; display : block ; margin-bottom : 1em }
div.stub *|*:not([test|="foo-bar"]) { color : lime }
div.stub *|p:not([lang|="en-us"]) { color : lime }
div.stub b|*[test|="foo2-bar"] { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" test="foo-bar">
          <r test="foo-bartut">This text should be</r>
          <r>in green characters</r>
        </q>
        <s xmlns="http://www.example.org/a" test="bar tut">This text should be in green characters</s>
        <t xmlns="http://www.example.org/a">This text should be in green characters</t>
        <p class="en-uk">This text should be in green characters</p>
        <u xmlns="http://www.example.org/b" test="foo2-bar-lol">This text should be in green characters</u>
      </div>
    </div>
  </test>
  <test name="NEGATED substring matching attribute selector on beginning">
    <style type="text/css"><![CDATA[div.stub > * { color : red }
div.stub *:not([title^="si on"]) { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be in green characters.</p>
        <p title="on chante?">This paragraph should be in green characters.</p>
        <p title="si on chantait">
          <span title="si il chantait">This paragraph should be in green characters.</span>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED substring matching attribute selector on end">
    <style type="text/css"><![CDATA[div.stub > * { color : red }
div.stub *:not([title$="tait"]) { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be in green characters.</p>
        <p title="on chante?">This paragraph should be in green characters.</p>
        <p title="si on chantait">
          <span title="si il chante">This paragraph should be in green characters.</span>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED substring matching attribute selector on middle">
    <style type="text/css"><![CDATA[div.stub > * { color : red }
div.stub *:not([title*=" on"]) { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be in green characters.</p>
        <p title="on chante?">This paragraph should be in green characters.</p>
        <p title="si on chantait">
          <span title="si il chante">This paragraph should be in green characters.</span>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
div.stub *:not([a|title]) {background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="a paragraph">This a:q element should be unstyled.</q>
        <p title="a paragraph">This paragraph should have a green background.</p>
        <r xmlns="http://www.example.org/b" b:title="a paragraph">This b:r element should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
div.stub *:not([a|title]) {background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="a paragraph">This a:q element should be unstyled.</q>
        <p title="a paragraph">This paragraph should have a green background.</p>
        <r xmlns="http://www.example.org/b" b:title="a paragraph">This b:r element should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED class selector">
    <style type="text/css"><![CDATA[div.stub > * { color : red }
div.stub *:not(.foo) { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be in green characters.</p>
        <p class="bar foofoo tut">This paragraph should be in green characters.</p>
        <p class="bar foo tut">
          <span class="tut foo2">This paragraph should be in green characters.</span>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED ID selector">
    <style type="text/css"><![CDATA[div.stub > * { color : red }
div.stub *:not(#foo) { color : lime }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should be in green characters.</p>
        <p id="foo2">This paragraph should be in green characters.</p>
        <p id="foo">
          <span>This paragraph should be in green characters.</span>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED :link pseudo-class">
    <style type="text/css"><![CDATA[div.stub > * { background-color : red }
div.stub *:not(:link) { background-color : lime }
]]></style>
    <div class="testText">
      <div class="stub"><a href="http://www.w3.org/">This anchor should have a green background</a>
(Note: You must have visited http://www.w3.org/ for this test to be valid.)
</div>
    </div>
  </test>
  <test name="NEGATED :visited pseudo-class">
    <style type="text/css"><![CDATA[div.stub > * { background-color : red }
div.stub *:not(:visited) { background-color : lime }
]]></style>
    <div class="testText">
      <div class="stub"><a href="http://unvisited.example.org/css3-modsel-62/">This anchor should have a green background</a>
(Don't follow this link.)
</div>
    </div>
  </test>
  <test name="NEGATED :hover pseudo-class">
    <style type="text/css"><![CDATA[div.stub * { color: lime; text-decoration: none; }
div.stub > * > *:not(:hover) { color: black }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>
          <span>The color of this text should be green when the pointing device hovers over it.</span>
        </p>
        <p>
          <a href="http://dummy.example.org/dummy">The color of this text should be green when the pointing device hovers over it.</a>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED :active pseudo-class">
    <style type="text/css"><![CDATA[div.stub * { color : lime }
div.stub > * > *:not(:active) { color : black }
]]></style>
    <div class="testText">
      <div class="stub">
        <p>
          <a href="http://dummy.example.org/dummy">This text should turn green while it is active.</a>
        </p>
        <p>
          <button>This text should turn green while it is active.</button>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED :focus pseudo-class">
    <style type="text/css"><![CDATA[a:not(:focus) { background-color: transparent; }
a { background-color: lime; }
]]></style>
    <div class="testText">
      <p>The background color of all <a href="#foo">anchors</a>
  should become <a href="#foo"> green</a> when they have the
  <a href="#foo">focus</a>.</p>
    </div>
  </test>
  <test name="NEGATED :target pseudo-class">
    <style type="text/css"><![CDATA[p { background-color: navy; color: white; }
p:not(:target) { background-color: white; color: black; }]]></style>
    <div class="testText">
      <p id="first">This paragraph should be unstyled.
       The background of the following paragraph should become blue when
       you follow <a href="#second">this link</a>.</p>
      <p id="second">This paragraph should initially be unstyled.
       It should become blue when you select the link above. When you select
       <a href="#third">this link</a>, it should return to being unstyled and the 
       background of the paragraph below should become blue.</p>
      <p id="third">This paragraph should initially be unstyled.
       It should become blue when you select the link above. When you follow
       <a href="#missing">this link</a>, the three paragraphs
       should all return to being unstyled.</p>
    </div>
  </test>
  <test name="NEGATED :target pseudo-class">
    <style type="text/css"><![CDATA[p { background-color: red; }
p:not(:target) { background-color: lime; }]]></style>
    <div class="testText">
      <p>This paragraph should be green.</p>
    </div>
  </test>
  <test name="NEGATED :lang() pseudo-class">
    <style type="text/css"><![CDATA[div.stub * { background-color : red  }
div.stub *:not(:lang(fr)) { background-color : green }]]></style>
    <div class="testText">
      <div class="stub" lang="en">
        <p>This paragraph should have a green background because the
   enclosing div is in english.</p>
        <p lang="en">This paragraph should have a green background because
   it is in english.</p>
        <div lang="fr">
          <p lang="en">This paragraph should have a green background
     because it is in english.</p>
        </div>
      </div>
    </div>
  </test>
  <test name="NEGATED :enabled pseudo-class">
    <style type="text/css"><![CDATA[button { background-color : red }
input { background-color : red }
button:not(:enabled) { background-color : lime }
input:not(:enabled)  { background-color : lime }]]></style>
    <div class="testText">
      <p>
        <button disabled="disabled">A button (disabled) with green background</button>
        <br/>
        <input disabled="disabled" size="36" type="text" value="a text area (disabled) with green background"/>
      </p>
    </div>
  </test>
  <test name="NEGATED :disabled pseudo-class">
    <style type="text/css"><![CDATA[button { background-color : red }
input { background-color : red }
button:not(:disabled) { background-color : lime }
input:not(:disabled) { background-color : lime }]]></style>
    <div class="testText">
      <p>
        <button>A button (enabled) with green background</button>
        <br/>
        <input size="36" type="text" value="a text area (enabled) with green background"/>
      </p>
    </div>
  </test>
  <test name="NEGATED :checked pseudo-class">
    <style type="text/css"><![CDATA[input, span { background-color : red }
input:not(:checked), input:not(:checked) + span { background-color : lime}]]></style>
    <div class="testText">
      <p>
        <input type="checkbox"/>
        <span>Everything in this paragraph should have a green background</span>
      </p>
    </div>
  </test>
  <test name="NEGATED :root pseudo-class">
    <style type="text/css"><![CDATA[p:not(:root) { background-color: lime; }
div * { background-color: red; }
]]></style>
    <div class="testText">
      <div>
        <p>This paragraph should have a green background and there should be no red anywhere.</p>
      </div>
    </div>
  </test>
  <test name="NEGATED :root pseudo-class">
    <style type="text/css"><![CDATA[html:not(:root), test:not(:root) { background-color: red; }
p { background-color: lime; }
]]></style>
    <div class="testText">
      <div>
        <p>This paragraph should have a green background and there should be no red anywhere.</p>
      </div>
    </div>
  </test>
  <test name="NEGATED :nth-child() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
ul > li:not(:nth-child(odd)) { background-color : lime }
ol > li:not(:nth-child(even)) { background-color : lime }
table.t1 tr:not(:nth-child(-n+4)) { background-color : lime }
table.t2 td:not(:nth-child(3n+1)) { background-color : lime }
table.t1 td, table.t2 td { border : thin black solid }]]></style>
    <div class="testText">
      <ul>
        <li>First list item</li>
        <li class="red">This second list item should have a green background</li>
        <li>Third list</li>
        <li class="red">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="red">This sixth list item should have a green background</li>
      </ul>
      <ol>
        <li class="red">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="red">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="red">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr>
            <td>4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td>1.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>1.4</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>1.7</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>2.4</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>2.7</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>3.4</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>3.7</td>
            <td class="red">green cell</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name="NEGATED :nth-child() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important; }
ul > li:not(:nth-child(odd)) { background-color : red }
ol > li:not(:nth-child(even)) { background-color : red }
table.t1 tr:not(:nth-child(-n+4)) { background-color : red }
table.t2 td:not(:nth-child(3n+1)) { background-color : red }
table.t1 td, table.t2 td { border : thin black solid }]]></style>
    <div class="testText">
      <ul>
        <li>First list item</li>
        <li class="green">This second list item should have a green background</li>
        <li>Third list</li>
        <li class="green">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="green">This sixth list item should have a green background</li>
      </ul>
      <ol>
        <li class="green">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="green">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="green">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr>
            <td>4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td>1.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>1.4</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>1.7</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>2.4</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>2.7</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>3.4</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>3.7</td>
            <td class="green">green cell</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name="NEGATED :nth-last-child() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
ul > li:not(:nth-last-child(odd)) { background-color : lime }
ol > li:not(:nth-last-child(even)) { background-color : lime }
table.t1 tr:not(:nth-last-child(-n+4)) { background-color : lime }
table.t2 td:not(:nth-last-child(3n+1)) { background-color : lime }
table.t1 td, table.t2 td { border : thin black solid }
]]></style>
    <div class="testText">
      <ul>
        <li class="red">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="red">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="red">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ul>
      <ol>
        <li>First list item</li>
        <li class="red">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="red">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="red">This sixth list item should have a green background</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr class="red">
            <td>Green row : 1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr class="red">
            <td>Green row : 2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr>
            <td>4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr>
            <td>5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr>
            <td>6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td class="red">green cell</td>
            <td>1.2</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>1.5</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>1.8</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>2.2</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>2.5</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>2.8</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td>3.2</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>3.5</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>3.8</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name="NEGATED :nth-last-child() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important; }
ul > li:not(:nth-last-child(odd)) { background-color : red }
ol > li:not(:nth-last-child(even)) { background-color : red }
table.t1 tr:not(:nth-last-child(-n+4)) { background-color : red }
table.t2 td:not(:nth-last-child(3n+1)) { background-color : red }
table.t1 td, table.t2 td { border : thin black solid }
]]></style>
    <div class="testText">
      <ul>
        <li class="green">This first list item should have a green background</li>
        <li>Second list item</li>
        <li class="green">This third list item should have a green background</li>
        <li>Fourth list item</li>
        <li class="green">This fifth list item should have a green background</li>
        <li>Sixth list item</li>
      </ul>
      <ol>
        <li>First list item</li>
        <li class="green">This second list item should have a green background</li>
        <li>Third list item</li>
        <li class="green">This fourth list item should have a green background</li>
        <li>Fifth list item</li>
        <li class="green">This sixth list item should have a green background</li>
      </ol>
      <div>
        <table border="1" class="t1">
          <tr class="green">
            <td>Green row : 1.1</td>
            <td>1.2</td>
            <td>1.3</td>
          </tr>
          <tr class="green">
            <td>Green row : 2.1</td>
            <td>2.2</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td>3.2</td>
            <td>3.3</td>
          </tr>
          <tr>
            <td>4.1</td>
            <td>4.2</td>
            <td>4.3</td>
          </tr>
          <tr>
            <td>5.1</td>
            <td>5.2</td>
            <td>5.3</td>
          </tr>
          <tr>
            <td>6.1</td>
            <td>6.2</td>
            <td>6.3</td>
          </tr>
        </table>
        <p/>
        <table border="1" class="t2">
          <tr>
            <td class="green">green cell</td>
            <td>1.2</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>1.5</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>1.8</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td>2.2</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>2.5</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>2.8</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td>3.2</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>3.5</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>3.8</td>
          </tr>
        </table>
      </div>
    </div>
  </test>
  <test name="NEGATED :nth-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:not(:nth-of-type(3)) { background-color : lime }
dl > *:not(:nth-of-type(3n+1)) { background-color : lime }
]]></style>
    <div class="testText">
      <p class="red">This paragraph should have green background</p>
      <address>And this address should be unstyled.</address>
      <p class="red">This paragraph should also have green background!</p>
      <p>But this one should be unstyled again.</p>
      <dl>
        <dt>First definition term</dt>
        <dd>First definition</dd>
        <dt class="red">Second definition term that should have green background</dt>
        <dd class="red">Second definition that should have green background</dd>
        <dt class="red">Third definition term that should have green background</dt>
        <dd class="red">Third definition that should have green background</dd>
        <dt>Fourth definition term</dt>
        <dd>Fourth definition</dd>
        <dt class="red">Fifth definition term that should have green background</dt>
        <dd class="red">Fifth definition that should have green background</dd>
        <dt class="red">Sixth definition term that should have green background</dt>
        <dd class="red">Sixth definition that should have green background</dd>
      </dl>
    </div>
  </test>
  <test name="NEGATED :nth-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
p:not(:nth-of-type(3)) { background-color : red }
dl > *:not(:nth-of-type(3n+1)) { background-color : red }
]]></style>
    <div class="testText">
      <p class="green">This paragraph should have green background</p>
      <address>And this address should be unstyled.</address>
      <p class="green">This paragraph should also have green background!</p>
      <p>But this one should be unstyled again.</p>
      <dl>
        <dt>First definition term</dt>
        <dd>First definition</dd>
        <dt class="green">Second definition term that should have green background</dt>
        <dd class="green">Second definition that should have green background</dd>
        <dt class="green">Third definition term that should have green background</dt>
        <dd class="green">Third definition that should have green background</dd>
        <dt>Fourth definition term</dt>
        <dd>Fourth definition</dd>
        <dt class="green">Fifth definition term that should have green background</dt>
        <dd class="green">Fifth definition that should have green background</dd>
        <dt class="green">Sixth definition term that should have green background</dt>
        <dd class="green">Sixth definition that should have green background</dd>
      </dl>
    </div>
  </test>
  <test name="NEGATED :nth-last-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:not(:nth-last-of-type(3)) { background-color : lime }
dl > *:not(:nth-last-of-type(3n+1)) { background-color : lime }
]]></style>
    <div class="testText">
      <p>This paragraph should be unstyled.</p>
      <address>This address should be unstyled.</address>
      <p class="red">This paragraph should have green background.</p>
      <p class="red">This paragraph should have green background.</p>
      <dl>
        <dt class="red">First definition term that should have green background.</dt>
        <dd class="red">First definition that should also have a green background.</dd>
        <dt class="red">Second definition term that should have green background.</dt>
        <dd class="red">Second definition that should have green background.</dd>
        <dt>Third definition term.</dt>
        <dd>Third definition.</dd>
        <dt class="red">Fourth definition term that should have green background.</dt>
        <dd class="red">Fourth definition that should have green background.</dd>
        <dt class="red">Fifth definition term that should have green background.</dt>
        <dd class="red">Fifth definition that should have green background.</dd>
        <dt>Sixth definition term.</dt>
        <dd>Sixth definition.</dd>
      </dl>
    </div>
  </test>
  <test name="NEGATED :nth-last-of-type() pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
p:not(:nth-last-of-type(3)) { background-color : red }
dl > *:not(:nth-last-of-type(3n+1)) { background-color : red }
]]></style>
    <div class="testText">
      <p>This paragraph should be unstyled.</p>
      <address>This address should be unstyled.</address>
      <p class="green">This paragraph should have green background.</p>
      <p class="green">This paragraph should have green background.</p>
      <dl>
        <dt class="green">First definition term that should have green background.</dt>
        <dd class="green">First definition that should also have a green background.</dd>
        <dt class="green">Second definition term that should have green background.</dt>
        <dd class="green">Second definition that should have green background.</dd>
        <dt>Third definition term.</dt>
        <dd>Third definition.</dd>
        <dt class="green">Fourth definition term that should have green background.</dt>
        <dd class="green">Fourth definition that should have green background.</dd>
        <dt class="green">Fifth definition term that should have green background.</dt>
        <dd class="green">Fifth definition that should have green background.</dd>
        <dt>Sixth definition term.</dt>
        <dd>Sixth definition.</dd>
      </dl>
    </div>
  </test>
  <test name="NEGATED :first-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 td:not(:first-child) { background-color : lime }
p > *:not(:first-child) { background-color : lime }
table.t1 td { border : thin black solid }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
          </tr>
        </table>
      </div>
      <p>This paragraph <span>should be</span> unstyled.</p>
    </div>
  </test>
  <test name="NEGATED :first-child pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
.t1 td:not(:first-child) { background-color : red }
p > *:not(:first-child) { background-color : red }
table.t1 td { border : thin black solid }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td>1.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>2.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
          </tr>
          <tr>
            <td>3.1</td>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
          </tr>
        </table>
      </div>
      <p>This paragraph <span>should be</span> unstyled.</p>
    </div>
  </test>
  <test name="NEGATED :last-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 td:not(:last-child) { background-color : lime }
p > *:not(:last-child) { background-color : lime }
table.t1 td { border : thin black solid }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td class="red">green cell</td>
            <td class="red">green cell</td>
            <td>3.3</td>
          </tr>
        </table>
      </div>
      <p>This <span>paragraph should</span> be unstyled.</p>
    </div>
  </test>
  <test name="NEGATED :last-child pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
.t1 td:not(:last-child) { background-color : red }
p > *:not(:last-child) { background-color : red }
table.t1 td { border : thin black solid }
]]></style>
    <div class="testText">
      <div>
        <table border="1" class="t1">
          <tr>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>1.3</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>2.3</td>
          </tr>
          <tr>
            <td class="green">green cell</td>
            <td class="green">green cell</td>
            <td>3.3</td>
          </tr>
        </table>
      </div>
      <p>This <span>paragraph should</span> be unstyled.</p>
    </div>
  </test>
  <test name="NEGATED :first-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
address { margin-bottom : 1em ; margin-left : 1em }
address:not(:first-of-type) { background-color : lime }
]]></style>
    <div class="testText">
      <div>This div contains 3 addresses :
<address>A first address with normal background</address>
<address class="red">A second address that should have a green background</address>
<address class="red">A third address that should have a green background</address>
</div>
    </div>
  </test>
  <test name="NEGATED :last-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
address { margin-bottom : 1em ; margin-left : 1em }
address:not(:last-of-type) { background-color : lime }
]]></style>
    <div class="testText">
      <div><address class="red">A first address that should have a green background</address><address class="red">A second address that should have a green background</address><address>A third address with normal background</address>
This div should have three addresses above it.</div>
    </div>
  </test>
  <test name="NEGATED :only-child pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
p:not(:only-child) { background-color : lime }
div.testText > div > p { margin-left : 1em }
]]></style>
    <div class="testText">
      <p class="red">This paragraph should have a green background.</p>
      <div>This div contains only one paragraph.
  <p>This paragraph should be unstyled.</p>
 </div>
    </div>
  </test>
  <test name="NEGATED :only-child pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
p:not(:only-child) { background-color : lime }
div.testText > div > p { margin-left : 1em }
]]></style>
    <div class="testText">
      <p class="green">This paragraph should have a green background.</p>
      <div>This div contains only one paragraph.
  <p>This paragraph should be unstyled.</p>
 </div>
    </div>
  </test>
  <test name="NEGATED :only-of-type pseudo-class">
    <style type="text/css"><![CDATA[.red { background-color : red }
.t1 *:not(:only-of-type) { background-color : lime }
]]></style>
    <div class="testText">
      <div class="t1">
        <p class="red">This paragraph should have green background.</p>
        <address>But this address should be unstyled.</address>
        <p class="red">This paragraph should have green background.</p>
      </div>
    </div>
  </test>
  <test name="NEGATED :only-of-type pseudo-class">
    <style type="text/css"><![CDATA[.green { background-color : lime ! important }
.t1 *:not(:only-of-type) { background-color : red }
]]></style>
    <div class="testText">
      <div class="t1">
        <p class="green">This paragraph should have green background.</p>
        <address>But this address should be unstyled.</address>
        <p class="green">This paragraph should have green background.</p>
      </div>
    </div>
  </test>
  <test name="Negation pseudo-class cannot be an argument of itself">
    <style type="text/css"><![CDATA[p { background-color : lime }
p:not(:not(p)) { background-color : red }]]></style>
    <div class="testText">
      <p>This paragraph should have a green background</p>
    </div>
  </test>
  <test name="Nondeterministic matching of descendant and child combinators">
    <style type="text/css"><![CDATA[p { color: red; }
blockquote > div p { color: green; }
]]></style>
    <div class="testText">
      <blockquote>
        <div>
          <div>
            <p>This text should be green.</p>
          </div>
        </div>
      </blockquote>
    </div>
  </test>
  <test name="Nondeterministic matching of direct and indirect adjacent combinators">
    <style type="text/css"><![CDATA[p { color: red; }
blockquote + div ~ p { color: green; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>This text should be unstyled.</div>
      <div>This text should be unstyled.</div>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Nondeterministic matching of direct and indirect adjacent combinators">
    <style type="text/css"><![CDATA[p { color: green ! important; }
blockquote + div ~ p { color: red; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>This text should be unstyled.</div>
      <div>This text should be unstyled.</div>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Nondeterministic matching of descendant and direct adjacent combinators">
    <style type="text/css"><![CDATA[p { color: red; }
blockquote + div p { color: green; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>
        <div>
          <p>This text should be green.</p>
        </div>
      </div>
    </div>
  </test>
  <test name="Nondeterministic matching of descendant and direct adjacent combinators">
    <style type="text/css"><![CDATA[p { color: green ! important; }
blockquote + div p { color: red; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>
        <div>
          <p>This text should be green.</p>
        </div>
      </div>
    </div>
  </test>
  <test name="Simple combination of descendant and child combinators">
    <style type="text/css"><![CDATA[p { color: red; }
blockquote div > p { color: green; }]]></style>
    <div class="testText">
      <blockquote>
        <div>
          <div>
            <p>This text should be green.</p>
          </div>
        </div>
      </blockquote>
    </div>
  </test>
  <test name="Simple combination of direct and indirect adjacent combinators">
    <style type="text/css"><![CDATA[p { color: red; }
blockquote ~ div + p { color: green; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>This text should be unstyled.</div>
      <div>This text should be unstyled.</div>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Simple combination of direct and indirect adjacent combinators">
    <style type="text/css"><![CDATA[p { color: green ! important; }
blockquote ~ div + p { color: red; }]]></style>
    <div class="testText">
      <blockquote>
        <div>This text should be unstyled.</div>
      </blockquote>
      <div>This text should be unstyled.</div>
      <div>This text should be unstyled.</div>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Type element selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace test url(http://www.example.org/a);
testa { background-color : red }
test|testa { background-color : lime }]]></style>
    <div class="testText">
      <testa xmlns="http://www.example.org/a">This paragraph should have a green background</testa>
    </div>
  </test>
  <test name="Type element selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace test url(http://www.example.org/b);
div.myTest * { background-color : red }
div.myTest *|testA { background-color : lime }]]></style>
    <div class="testText">
      <div class="myTest">
        <testA xmlns="http://www.example.org/b">This paragraph should have a green background</testA>
      </div>
    </div>
  </test>
  <test name="Type element selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace test url(http://www.example.org/b);
*|testA { background-color : red }
|testA {background-color : lime }]]></style>
    <div class="testText">
      <testA xmlns="">This paragraph has no declared namespace and should have a green background.</testA>
    </div>
  </test>
  <test name="Universal selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
p, q { display : block ; margin-bottom : 1em }
b|* { background-color : lime }]]></style>
    <div class="testText">
      <p>This line should be unstyled.</p>
      <p xmlns="http://www.example.org/b">This line should have a green background.</p>
      <q xmlns="http://www.example.org/b">This line should have a green background.</q>
      <p xmlns="http://www.example.org/a">This line should be unstyleed.</p>
      <p xmlns="http://www.example.org/b">This line should have a green background.</p>
    </div>
  </test>
  <test name="Universal selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
p, q { display : block ; margin-bottom : 1em }
b|* { background-color : red }
[test] { background-color: lime; }]]></style>
    <div class="testText">
      <p>This line should be unstyled.</p>
      <p xmlns="http://www.example.org/b" test="test">This line should have a green background.</p>
      <q xmlns="http://www.example.org/b" test="test">This line should have a green background.</q>
      <p xmlns="http://www.example.org/a">This line should be unstyled.</p>
      <p xmlns="http://www.example.org/b" test="test">This line should have a green background.</p>
    </div>
  </test>
  <test name="Universal selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.test * { background-color : red ; display : block ; margin-bottom : 1em }
div.test *|* { background-color : lime }]]></style>
    <div class="testText">
      <div class="test">
        <p>This line should  have a green background</p>
        <p xmlns="http://www.example.org/b">This line should have a green background</p>
        <q xmlns="http://www.example.org/b">This line should have a green background</q>
        <p xmlns="http://www.example.org/a">This line should have a green background</p>
        <foo xmlns="http://www.example.org/b">This line should have a green background</foo>
      </div>
    </div>
  </test>
  <test name="Universal selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.green * { background-color : red }
div.test * { display : block ; margin-bottom : 1em }
div.test |* { background-color : lime }]]></style>
    <div class="testText">
      <div class="test">
        <p>This line should be unstyled.</p>
        <elementA xmlns="http://www.example.org/a">This line should be unstyled.</elementA>
        <elementB xmlns="http://www.example.org/b">This line should be unstyled.</elementB>
        <div class="green">
          <p xmlns="">This line should have a green background</p>
          <elementA xmlns="">This line should have a green background</elementA>
          <elementB xmlns="">This line should have a green background</elementB>
        </div>
      </div>
    </div>
  </test>
  <test name="Universal selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.green * { background-color : lime ! important }
div.test * { display : block ; margin-bottom : 1em }
div.test |* { background-color : red }]]></style>
    <div class="testText">
      <div class="test">
        <p>This line should be unstyled.</p>
        <elementA xmlns="http://www.example.org/a">This line should be unstyled.</elementA>
        <elementB xmlns="http://www.example.org/b">This line should be unstyled.</elementB>
        <div class="green">
          <p xmlns="">This line should have a green background</p>
          <elementA xmlns="">This line should have a green background</elementA>
          <elementB xmlns="">This line should have a green background</elementB>
        </div>
      </div>
    </div>
  </test>
  <test name="Attribute existence selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r { display : block ; margin-bottom : 1em }
*|q { background-color : red }
*[a|title] {background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="a paragraph">This paragraph should be unstyled.</p>
      <q xmlns="http://www.example.org/a" a:title="a paragraph">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:title="a paragraph">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute existence selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r { display : block ; margin-bottom : 1em }
*|q { background-color : lime ! important }
*[a|title] {background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="a paragraph">This paragraph should be unstyled.</p>
      <q xmlns="http://www.example.org/a" a:title="a paragraph">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:title="a paragraph">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|t { background-color : red }
*[a|title="foo"] {background-color : lime }
*[a|title=footwo] {background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="foo">This paragraph should be unstyled.</p>
      <q xmlns="http://www.example.org/a" a:title="foo">This paragraph should have a green background</q>
      <s xmlns="http://www.example.org/a" a:title="foobar">This paragraph should be unstyled.</s>
      <r xmlns="http://www.example.org/b" b:title="foo">This paragraph should be unstyled.</r>
      <t xmlns="http://www.example.org/a" a:title="footwo">This paragraph should have a green background</t>
    </div>
  </test>
  <test name="Attribute value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q { background-color : lime ! important }
*[a|title="foo"] {background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="foo">This paragraph should be unstyled.</p>
      <q xmlns="http://www.example.org/a" a:title="foo">This paragraph should have a green background</q>
      <s xmlns="http://www.example.org/a" a:title="foobar">This paragraph should be unstyled.</s>
      <r xmlns="http://www.example.org/b" b:title="foo">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute space-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[a|foo~="bar"], *|*[|class~="bar"] { background-color : lime }
*|*[html|class~="bar"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p class="t bar u">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="hgt bardot f">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="hgt bar f">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="hgt bar f">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Attribute space-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[a|foo~="bar"], *|*[html|class~="bar"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p class="t bar u">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="hgt bardot f">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="hgt bar f">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="hgt bar f">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Attribute dash-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[a|foo|="bar"], *|*[html|lang|="en"] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" xmlns:html="http://www.w3.org/1999/xhtml" class="testText">
      <p html:lang="en-us">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="bargain-trash">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="bar-drink-glass">This paragraph should have a green background</r>
      <s xmlns="http://www.example.org/b" b:foo="bar-drink-glass">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Attribute dash-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[a|foo|="bar"], *|*[html|lang|="en"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" xmlns:html="http://www.w3.org/1999/xhtml" class="testText">
      <p html:lang="en-us">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="bargain-trash">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="bar-drink-glass">This paragraph should have a green background</r>
      <s xmlns="http://www.example.org/b" b:foo="bar-drink-glass">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on beginning with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[a|title^="si on"], *|*[title^="si on"] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="et si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on beginning with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[a|title^="si on"], *|*[title^="si on"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="et si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on end with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[a|title$="tait"], p[|title$="tait"] { background-color : lime }
*|*[|title$="tait"], *|*[html|title$="tait"] { background-color : red }
]]></style>
    <div class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" xmlns:a="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" xmlns:a="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" xmlns:b="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on end with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[a|title$="tait"], *|*[html|title$="tait"] { background-color : red }
]]></style>
    <div class="testText">
      <p title="si on chantait">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" xmlns:a="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" xmlns:a="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" xmlns:b="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on middle with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[a|title*="hanta"], p[|title*="hanta"] { background-color : lime }
*|*[|title*="hanta"], *|*[html|title*="hanta"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute value selector on middle with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[a|title*="hanta"], *|*[html|title*="hanta"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Attribute existence selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|title] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background</s>
    </div>
  </test>
  <test name="Attribute existence selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|title] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background</s>
    </div>
  </test>
  <test name="Attribute value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|title="si on chantait"] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
    </div>
  </test>
  <test name="Attribute value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|title="si on chantait"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
    </div>
  </test>
  <test name="Attribute space-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|class~="deux"], *|*[*|foo~="deux"] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p class="un deux trois">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:bar="un deux trois">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:foo="un second deuxieme trois">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="un deux trois">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="un deux trois">This paragraph should have a green background.</s>
    </div>
  </test>
  <test name="Attribute space-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|class~="deux"], *|*[*|foo~="deux"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p class="un deux trois">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:bar="un deux trois">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:foo="un second deuxieme trois">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="un deux trois">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="un deux trois">This paragraph should have a green background.</s>
    </div>
  </test>
  <test name="Attribute dash-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[*|lang|="en"], *|*[a|foo|="un-d"] { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p lang="en-us">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:foo="un-deux-trois">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:foo="un-second-deuxieme-trois">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="un-d-trois">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="un-d-trois">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Attribute dash-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[*|lang|="en"], *|*[a|foo|="un-d"] { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p lang="en-us">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:foo="un-deux-trois">This paragraph should be unstyled.</q>
      <q xmlns="http://www.example.org/a" a:foo="un-second-deuxieme-trois">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:foo="un-d-trois">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:foo="un-d-trois">This paragraph should be unstyled.</s>
    </div>
  </test>
  <test name="Substring matching attribute selector on beginning with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|title^="si on"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on beginning with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|title^="si on"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on end with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|title$="tait"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on end with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|title$="tait"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on middle with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
*|*[*|title*="on ch"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on middle with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
*|*[*|title*="on ch"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Attribute existence selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[|title] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" class="testText">
      <p title="si on chantait">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background</r>
    </div>
  </test>
  <test name="Attribute existence selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[|title] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" class="testText">
      <p title="si on chantait">This paragraph should have a green background</p>
      <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background</r>
    </div>
  </test>
  <test name="Attribute value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[|title="si on chantait"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Attribute value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[|title="si on chantait"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Attribute space-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|q { background-color : red }
*|*[|class~="foo"] { background-color : lime }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <p class="bar foo toto">This paragraph should have a green background.</p>
      <address class="bar foofoo toto">This address should be unstyled.</address>
      <q xmlns="http://www.example.org/a" class="bar foo toto">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:class="bar foo toto">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute space-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|q { background-color : lime ! important }
*|*[|class~="foo"] { background-color : red }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <p class="bar foo toto">This paragraph should have a green background.</p>
      <address class="bar foofoo toto">This address should be unstyled.</address>
      <q xmlns="http://www.example.org/a" class="bar foo toto">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:class="bar foo toto">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute dash-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|q { background-color : red }
*|*[|lang|="foo-bar"], *|*[|myattr|="tat-tut"] { background-color : lime }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <p lang="foo-bar">This paragraph should have a green background.</p>
      <address lang="foo-b">This address should be unstyled.</address>
      <address lang="foo-barbar-toto">This address should be unstyled.</address>
      <q xmlns="http://www.example.org/a" myattr="tat-tut-tot">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:myattr="tat-tut-tot">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Attribute dash-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|p, *|q { background-color : lime ! important }
*|*[|lang|="foo-bar"], *|*[|myattr|="tat-tut"] { background-color : red }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <p lang="foo-bar">This paragraph should have a green background.</p>
      <address lang="foo-b">This address should be unstyled.</address>
      <address lang="foo-barbar-toto">This address should be unstyled.</address>
      <q xmlns="http://www.example.org/a" myattr="tat-tut-tot">This paragraph should have a green background.</q>
      <r xmlns="http://www.example.org/b" b:myattr="tat-tut-tot">This paragraph should be unstyled.</r>
    </div>
  </test>
  <test name="Substring matching attribute selector on beginning without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[|title^="si on"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on beginning without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[|title^="si on"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on end without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[|title$="tait"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on end without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[|title$="tait"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on middle without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : red }
*|*[|title*="on ch"] { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="Substring matching attribute selector on middle without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p, *|r { background-color : lime ! important }
*|*[|title*="on ch"] { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <p title="si on chantait">This paragraph should have a green background.</p>
      <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should be unstyled.</q>
      <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should have a green background.</r>
      <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should be unstyled.</t>
    </div>
  </test>
  <test name="NEGATED type element selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|l { display : block ; margin-bottom : 1em }
div.test * { background-color : red }
div.test *:not(a|p) { background-color : lime }
]]></style>
    <div class="testText">
      <div class="test">
        <p xmlns="http://www.w3.org/1999/xhtml">This paragraph should have a green background.</p>
        <p xmlns="http://www.example.org/b">This paragraph should have a green background.</p>
        <p xmlns="">This paragraph should have a green background.</p>
        <p xmlns="http://www.example.org/a">
          <l>This paragraph should have a green background.</l>
        </p>
      </div>
    </div>
  </test>
  <test name="NEGATED type element selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.test *:not(*|div) { display : block ; margin-bottom : 1em ;
                            background-color : red }
div.test > *:not(*|p):not(*|div) { background-color : lime }
div.stub > *:not(*|div) { background-color : lime }
]]></style>
    <div class="testText">
      <div class="test">
        <div class="stub">
          <p>This paragraph should have a green background.</p>
          <p xmlns="http://www.example.org/b">This paragraph should have a green background.</p>
          <p xmlns="">This paragraph should have a green background.</p>
          <p xmlns="http://www.example.org/a">This paragraph should have a green background.</p>
        </div>
        <address>This address should have a green background.</address>
        <s xmlns="http://www.example.org/b">This paragraph should have a green background.</s>
        <t xmlns="">This paragraph should have a green background.</t>
        <u xmlns="http://www.example.org/a">This paragraph should have a green background.</u>
      </div>
    </div>
  </test>
  <test name="NEGATED type element selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > * { display : block ; margin-bottom : 1em ;
                            background-color : red }
div.stub > *:not(|p) { background-color : lime }
div.stub > *|l > *:not(|p) { background-color : red }]]></style>
    <div class="testText">
      <div class="stub">
        <p>This paragraph should have a green background</p>
        <p xmlns="http://www.example.org/b">This paragraph should have a green background</p>
        <l xmlns="http://www.example.org/b">
          <p xmlns="">This paragraph should have a
                green background</p>
        </l>
        <p xmlns="http://www.example.org/a">This paragraph should have a green background</p>
      </div>
    </div>
  </test>
  <test name="NEGATED universal selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { color : red ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not(a|*) { color : green  }
div.stub v { color : green }
]]></style>
    <div class="testText">
      <div class="stub">
        <address>This address should be in green characters.</address>
        <s xmlns="http://www.example.org/b">This paragraph should be in green characters.</s>
        <t xmlns="">This paragraph should be in green characters.</t>
        <u xmlns="http://www.example.org/a">
          <v>This paragraph should be in green characters.</v>
        </u>
      </div>
    </div>
  </test>
  <test name="NEGATED universal selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { background-color : lime ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not(*|*) { background-color : red }
/* yes, the rule just above selects nothing... That's the point */
]]></style>
    <div class="testText">
      <div class="stub">
        <address>This address should have a green background</address>
        <s xmlns="http://www.example.org/b">This paragraph should have a green background</s>
        <t xmlns="">This paragraph should have a green background</t>
        <u xmlns="http://www.example.org/a">This paragraph should have a green background</u>
      </div>
    </div>
  </test>
  <test name="NEGATED universal selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { color : red ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not(|*) { color : green }
]]></style>
    <div class="testText">
      <div class="stub">
        <address>This address should be in green characters.</address>
        <s xmlns="http://www.example.org/b">This paragraph should be in green characters.</s>
        <u xmlns="http://www.example.org/a">This paragraph should be in green characters.</u>
      </div>
    </div>
  </test>
  <test name="NEGATED universal selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace html url(http://www.w3.org/1999/xhtml);
@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
div.stub > *|* { color : green ; display : block ;
                 margin-bottom : 1em }
div.stub > *|*:not(|*) { color : red ! important }
]]></style>
    <div class="testText">
      <div class="stub">
        <t xmlns="">This paragraph should be in green characters.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : red }
div.stub *:not([a|title="foo"]) {background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="foo">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="foo">This paragraph should be unstyled.</q>
        <s xmlns="http://www.example.org/a" a:title="foobar">This paragraph should have a green background.</s>
        <r xmlns="http://www.example.org/b" b:title="foo">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p, *|r, *|s { background-color : lime ! important }
div.stub *:not([a|title="foo"]) {background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="foo">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="foo">This paragraph should be unstyled.</q>
        <s xmlns="http://www.example.org/a" a:title="foobar">This paragraph should have a green background.</s>
        <r xmlns="http://www.example.org/b" b:title="foo">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : red }
div.stub *|*:not([a|foo~="bar"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="hgt bardot f">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="hgt bar f">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="hgt bar f">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : lime ! important }
div.stub *|*:not([a|foo~="bar"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="hgt bardot f">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="hgt bar f">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="hgt bar f">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : red }
div.stub *|*:not([a|foo|="bar"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="bargain-trash">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="bar-drink-glass">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="bar-drink-glass">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : lime ! important }
div.stub *|*:not([a|foo|="bar"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="bargain-trash">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="bar-drink-glass">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="bar-drink-glass">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on beginning with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : red }
div.stub *|*:not([a|title^="si on"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="et si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on beginning with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : lime ! important }
div.stub *|*:not([a|title^="si on"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="et si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on end with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : red }
div.stub *|*:not([a|title$="tait"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on end with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : lime ! important }
div.stub *|*:not([a|title$="tait"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on middle with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : red }
div.stub *|*:not([a|title*="hanta"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute value selector on middle with declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q, *|s { background-color : lime ! important }
div.stub *|*:not([a|title*="hanta"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q { background-color : red }
div.stub *|*:not([*|title]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q { background-color : lime ! important }
div.stub *|*:not([*|title]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q { background-color : red }
div.stub *|*:not([*|title="si on chantait"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|q { background-color : lime ! important }
div.stub *|*:not([*|title="si on chantait"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:foo="si on chantait">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p.deu, *|q { background-color : red }
div.stub html|*:not([*|class~="deux"]),
   div.stub *|*:not(html|*):not([*|foo~="deux"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p class="un deux trois">This paragraph should be unstyled</p>
        <p class="un deu trois">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:bar="un deux trois">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:foo="un second deuxieme trois">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="un deux trois">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="un deux trois">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p.deu, *|q { background-color : lime ! important }
div.stub html|*:not([*|class~="deux"]),
   div.stub *|*:not(html|*):not([*|foo~="deux"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p class="un deux trois">This paragraph should be unstyled</p>
        <p class="un deu trois">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:bar="un deux trois">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:foo="un second deuxieme trois">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="un deux trois">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="un deux trois">This paragraph should be unstyled.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p.foo, *|q, *|s { background-color : red }
div.stub html|*:not([*|lang|="en"]),
  div.stub *|*:not(html|*):not([a|foo|="un-d"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p lang="en-us">This paragraph should be unstyled.</p>
        <p class="foo" lang="fr">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:foo="un-deux-trois">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:foo="un-second-deuxieme-trois">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="un-d-trois">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="un-d-trois">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s { display : block ; margin-bottom : 1em }
*|p.foo, *|q, *|s { background-color : lime ! important }
div.stub html|*:not([*|lang|="en"]),
  div.stub *|*:not(html|*):not([a|foo|="un-d"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p lang="en-us">This paragraph should be unstyled.</p>
        <p class="foo" lang="fr">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:foo="un-deux-trois">This paragraph should have a green background.</q>
        <q xmlns="http://www.example.org/a" a:foo="un-second-deuxieme-trois">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:foo="un-d-trois">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:foo="un-d-trois">This paragraph should have a green background.</s>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on beginning with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : red }
div.stub *|*:not([*|title^="si on"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si il chantait">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on beginning with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : lime ! important }
div.stub *|*:not([*|title^="si on"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si il chantait">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on end with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : red }
div.stub *|*:not([*|title$="tait"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si tu chantais">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on end with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : lime ! important }
div.stub *|*:not([*|title$="tait"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si tu chantais">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on middle with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : red }
div.stub *|*:not([*|title*="on ch"]) { background-color : lime }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si il chantait">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on middle with universal namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|p.red, *|q, *|t { background-color : lime ! important }
div.stub *|*:not([*|title*="on ch"]) { background-color : red }
]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <p class="red" title="si il chantait">This paragraph should have a green background.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should be unstyled.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|q, *|r { display : block ; margin-bottom : 1em }
*|q { background-color : red }
div.stub *|*:not([|title]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute existence selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|q, *|r { display : block ; margin-bottom : 1em }
*|q { background-color : lime ! important }
div.stub *|*:not([|title]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : red }
div.stub *|*:not([|title="si on chantait"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : lime ! important }
div.stub *|*:not([|title="si on chantait"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <q xmlns="http://www.example.org/a" a:title="si on chantait">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|address, *|r { background-color : red }
div.stub *|*:not([|class~="foo"]) { background-color : lime }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p class="bar foo toto">This paragraph should be unstyled.</p>
        <address class="bar foofoo toto">This address should have a green background.</address>
        <q xmlns="http://www.example.org/a" class="bar foo toto">This paragraph should be unstyled.</q>
        <r xmlns="http://www.example.org/b" b:class="bar foo toto">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute space-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|address, *|r { background-color : lime ! important }
div.stub *|*:not([|class~="foo"]) { background-color : red }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p class="bar foo toto">This paragraph should be unstyled.</p>
        <address class="bar foofoo toto">This address should have a green background.</address>
        <q xmlns="http://www.example.org/a" class="bar foo toto">This paragraph should be unstyled.</q>
        <r xmlns="http://www.example.org/b" b:class="bar foo toto">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|address, *|r { background-color : red }
div.stub *|*:not([|lang|="foo-bar"]) { background-color : lime }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p lang="foo-bar">This paragraph should be unstyled.</p>
        <address lang="foo-b">This address should have a green background.</address>
        <address lang="foo-barbar-toto">This address should have a green background.</address>
        <q xmlns="http://www.example.org/a" lang="foo-bar">This paragraph should be unstyled.</q>
        <r xmlns="http://www.example.org/b" b:lang="foo-bar">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Attribute dash-separated value selector without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|address, *|q, *|r { display : block ; margin-bottom : 1em }
*|address, *|r { background-color : lime ! important }
div.stub *|*:not([|lang|="foo-bar"]) { background-color : red }]]></style>
    <div xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p lang="foo-bar">This paragraph should be unstyled.</p>
        <address lang="foo-b">This address should have a green background.</address>
        <address lang="foo-barbar-toto">This address should have a green background.</address>
        <q xmlns="http://www.example.org/a" lang="foo-bar">This paragraph should be unstyled.</q>
        <r xmlns="http://www.example.org/b" b:lang="foo-bar">This paragraph should have a green background.</r>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on beginning without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : red }
div.stub *|*:not([|title^="si on"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on beginning without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : lime ! important }
div.stub *|*:not([|title^="si on"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" b:ti="si on chantait">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on end without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : red }
div.stub *|*:not([|title$="tait"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on end without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : lime ! important }
div.stub *|*:not([|title$="tait"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on middle without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : red }
div.stub *|*:not([|title*="on ch"]) { background-color : lime }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED Substring matching attribute selector on middle without declared namespace">
    <style type="text/css"><![CDATA[@namespace a url(http://www.example.org/a);
@namespace b url(http://www.example.org/b);
@namespace html url(http://www.w3.org/1999/xhtml);
*|p, *|q, *|r, *|s, *|t{ display : block ; margin-bottom : 1em }
*|q, *|s, *|t { background-color : lime ! important }
div.stub *|*:not([|title*="on ch"]) { background-color : red }]]></style>
    <div xmlns:a="http://www.example.org/a" xmlns:b="http://www.example.org/b" class="testText">
      <div class="stub">
        <p title="si on chantait">This paragraph should be unstyled.</p>
        <q xmlns="http://www.example.org/a" a:title="si nous chantions">This paragraph should have a green background.</q>
        <r xmlns="http://www.example.org/a" title="si on chantait">This paragraph should be unstyled.</r>
        <s xmlns="http://www.example.org/b" b:title="si on chantait">This paragraph should have a green background.</s>
        <t xmlns="http://www.example.org/b" title="si nous chantions">This paragraph should have a green background.</t>
      </div>
    </div>
  </test>
  <test name="NEGATED :enabled:disabled pseudo-classes">
    <style type="text/css"><![CDATA[div :not(:enabled):not(:disabled) { background: lime; }
p { background : red;}]]></style>
    <div class="testText">
      <div>
        <p>This paragraph should have a green background.</p>
      </div>
    </div>
  </test>
  <test name=":nth-of-type() pseudo-class with hidden elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=odd] { background: red; }
  line:nth-of-type(odd) { background: lime; }
  [hidden] { display: none; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line hidden="hidden" type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line hidden="hidden" type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line hidden="hidden" type="even">This line should be unstyled.</line>
        <line hidden="hidden" type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
      </test>
    </div>
  </test>
  <test name=":nth-of-type() pseudo-class with hidden elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=odd] { background: lime ! important; }
  line:nth-of-type(odd) { background: red; }
  [hidden] { display: none; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line hidden="hidden" type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line hidden="hidden" type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
        <line hidden="hidden" type="even">This line should be unstyled.</line>
        <line hidden="hidden" type="odd">This line should be green.</line>
        <line type="even">This line should be unstyled.</line>
        <line type="odd">This line should be green.</line>
      </test>
    </div>
  </test>
  <test name=":nth-child() pseudo-class with hidden elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=match] { background: red; }
  line:nth-child(3n-1) { background: lime; }
  [hidden] { display: none; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line hidden="hidden" type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
      </test>
    </div>
  </test>
  <test name=":nth-child() pseudo-class with hidden elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=match] { background: lime ! important; }
  line:nth-child(3n-1) { background: red; }
  [hidden] { display: none; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line hidden="hidden" type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
      </test>
    </div>
  </test>
  <test name=":nth-last-of-type() pseudo-class with collapsed elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=match] { background: red; }
  line:nth-last-of-type(3n-1) { background: lime; }
  [hidden] { visibility: collapse; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="match">This line should be green.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
      </test>
    </div>
  </test>
  <test name=":nth-last-of-type() pseudo-class with collapsed elements">
    <style type="text/css"><![CDATA[
  line { display: block; }
  [type~=match] { background: lime ! important; }
  line:nth-last-of-type(3n-1) { background: red; }
  [hidden] { visibility: collapse; }
]]></style>
    <div class="testText">
      <test xmlns="http://www.example.org/">
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line hidden="hidden" type="match">This line should be green.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line hidden="hidden" type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
        <line type="">This line should be unstyled.</line>
        <line type="match">This line should be green.</line>
        <line type="">This line should be unstyled.</line>
      </test>
    </div>
  </test>
  <test name=":empty pseudo-class and text">
    <style type="text/css"><![CDATA[
 p { background: lime; }
 p:empty { background: red; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name=":empty pseudo-class and empty elements">
    <style type="text/css"><![CDATA[
 address:empty { background: lime; }
 address { background: red; margin: 0; height: 1em; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address/>
      <div class="text">This line should have a green background.</div>
    </div>
  </test>
  <test name=":empty pseudo-class and empty elements">
    <style type="text/css"><![CDATA[
 address:empty { background: lime; }
 address { background: red; margin: 0; height: 1em; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address/>
      <div class="text">This line should have a green background.</div>
    </div>
  </test>
  <test name=":empty pseudo-class and XML/SGML constructs">
    <style type="text/css"><![CDATA[
 address:empty { background: lime; }
 address { background: red; margin: 0; height: 1em; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address>
        <!-- -->
        <?test random PI?>
      </address>
      <div class="text">This line should have a green background.</div>
      <p>(Note: This test is based on unpublished errata.)</p>
    </div>
  </test>
  <test name=":empty pseudo-class and whitespace">
    <style type="text/css"><![CDATA[
 address { background: lime; margin: 0; height: 1em; }
 address:empty { background: red; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address> </address>
      <div class="text">This line should have a green background.</div>
    </div>
  </test>
  <test name=":empty pseudo-class and elements">
    <style type="text/css"><![CDATA[
 address { background: lime; margin: 0; height: 1em; }
 address:empty { background: red; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address>
        <span/>
      </address>
      <div class="text">This line should have a green background.</div>
    </div>
  </test>
  <test name=":empty pseudo-class and CDATA">
    <style type="text/css"><![CDATA[
 address { background: red; margin: 0; height: 1em; display: block; }
 address:empty { background: lime; }
 .text { margin: -1em 0 0 0; }
]]></style>
    <div class="testText">
      <address xmlns="http://tests.example.org/xml-only/"/>
      <div class="text">This line should have a green background.</div>
      <p>(Note: This test is based on unpublished errata.)</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  p, { background: red; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  .5cm { background: red; }
]]></style>
    <div class="testText">
      <p class="5cm">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  .\5cm { background: red; }
]]></style>
    <div class="testText">
      <p class="5cm">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  .two\ words { background: red; }

  /* the "." and "~=" forms match on a space separated list of words.
  In such a list, a word containing a space can never match, since it
  would by definition be two words. */

]]></style>
    <div class="testText">
      <p class="two words">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  .one.word { background: red; }
]]></style>
    <div class="testText">
      <p class="one.word">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  .one\.word { background: lime; }
  p { background: red; }
]]></style>
    <div class="testText">
      <p class="one.word">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  foo & address, p { background: red; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  foo & address, p { background: red; }
  p { background: lime; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  foo & address, p { background: red ! important; }
  p { background: lime; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  [*=test] { background: red; }
]]></style>
    <div class="testText">
      <p class="test">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  [*|*=test] { background: red; }
]]></style>
    <div class="testText">
      <p class="test">This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing of new pseudo-elements">
    <style type="text/css"><![CDATA[
  ::selection { background: lime; }
  :selection { background: red; }
]]></style>
    <div class="testText">
      <p>Try selecting some text in this document. It should be have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing of unknown pseudo-classes">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  p:subject { background: red; } /* this is not valid CSS, and if UAs
  implemented the experimental :subject pseudo-class they should have
  used the :-vnd-ident syntax. */
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
    </div>
  </test>
  <test name="Syntax and parsing of unknown pseudo-classes and pseudo-elements">
    <style type="text/css"><![CDATA[
  p { background: lime; }
  p   * { background: lime; }
  p > * { background: lime; }
  p + * { background: lime; }
  p ~ * { background: lime; }

  /* let's try some pseudos that are not valid CSS but are likely to
  be implemented as extensions in some UAs. These should not be
  recognised, as UAs implementing such extensions should use the
  :-vnd-ident syntax. */

  :canvas { background: red; }
  :viewport { background: red; }
  :window { background: red; }
  :menu { background: red; }
  :table { background: red; }
  :select { background: red; }
  ::canvas { background: red; }
  ::viewport { background: red; }
  ::window { background: red; }
  ::menu { background: red; }
  ::table { background: red; }
  ::select { background: red; }
]]></style>
    <div class="testText">
      <p>This line should have a green background.</p>
      <p>
  UAs may render the following element as a pop up menu. If so, please ensure the menu is unstyled (or green).
  <select size="1"><option>This should</option><option>have a green</option><option>background.</option></select>
 </p>
      <table>
        <tr>
          <td>This line should have a green background (or it might be unstyled).</td>
        </tr>
      </table>
      <!-- only allowed to be unstyled if + and ~ are not supported -->
    </div>
  </test>
  <test name=":first-letter with ::first-letter">
    <style type="text/css"><![CDATA[
  p:first-letter { background-color: red; }
  p::first-letter { background-color: lime; }
]]></style>
    <div class="testText">
      <p>The first letter of this paragraph should have a green background.</p>
    </div>
  </test>
  <test name=":first-letter with ::first-letter">
    <style type="text/css"><![CDATA[
  p::first-letter { background-color: red; }
  p:first-letter { background-color: lime; }
]]></style>
    <div class="testText">
      <p>The first letter of this paragraph should have a green background.</p>
    </div>
  </test>
  <test name=":first-line with ::first-line">
    <style type="text/css"><![CDATA[
  p:first-line { background-color: red; }
  p::first-line { background-color: lime; }
]]></style>
    <div class="testText">
      <p>The first line of this paragraph should have a green background.</p>
    </div>
  </test>
  <test name=":first-line with ::first-line">
    <style type="text/css"><![CDATA[
  p::first-line { background-color: red; }
  p:first-line { background-color: lime; }
]]></style>
    <div class="testText">
      <p>The first line of this paragraph should have a green background.</p>
    </div>
  </test>
  <test name=":before with ::before">
    <style type="text/css"><![CDATA[
  span:before { background-color: red; content: 'FAILED'; }
  span::before { background-color: lime; content: 'PASSED'; }
]]></style>
    <div class="testText">
      <p>This test has <span/>.</p>
      <p>(If the previous line just reads "This test has ." then this test has failed.)</p>
    </div>
  </test>
  <test name=":before with ::before">
    <style type="text/css"><![CDATA[
  span::before { background-color: red; content: 'FAILED'; }
  span:before { background-color: lime; content: 'PASSED'; }
]]></style>
    <div class="testText">
      <p>This test has <span/>.</p>
      <p>(If the previous line just reads "This test has ." then this test has failed.)</p>
    </div>
  </test>
  <test name=":after with ::after">
    <style type="text/css"><![CDATA[
  span:after { background-color: red; content: 'FAILED'; }
  span::after { background-color: lime; content: 'PASSED'; }
]]></style>
    <div class="testText">
      <p>This test has <span/>.</p>
      <p>(If the previous line just reads "This test has ." then this test has failed.)</p>
    </div>
  </test>
  <test name=":after with ::after">
    <style type="text/css"><![CDATA[
  span::after { background-color: red; content: 'FAILED'; }
  span:after { background-color: lime; content: 'PASSED'; }
]]></style>
    <div class="testText">
      <p>This test has <span/>.</p>
      <p>(If the previous line just reads "This test has ." then this test has failed.)</p>
    </div>
  </test>
  <test name="Long chains of selectors">
    <style type="text/css"><![CDATA[
  span { color: red; }
  span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span, span { color: green } /* 2049 */
]]></style>
    <div class="testText">
      <p>
        <span>This line should be green.</span>
      </p>
    </div>
  </test>
  <test name="Long chains of selectors">
    <style type="text/css"><![CDATA[
  .span { color: red; }
  .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span, .span { color: green } /* 2049 */
]]></style>
    <div class="testText">
      <p class="span">This line should be green.</p>
    </div>
  </test>
  <test name="Long chains of selectors">
    <style type="text/css"><![CDATA[
  .span { color: red; }
  .span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span.span { color: green } /* 2049 */
]]></style>
    <div class="testText">
      <p class="span">This line should be green.</p>
    </div>
  </test>
  <test name="Long chains of selectors">
    <style type="text/css"><![CDATA[
  p.span { color: red; }
  p:not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span):not(.span) { color: green } /* 2049 */
]]></style>
    <div class="testText">
      <p>This line should be green.</p>
    </div>
  </test>
  <test name="Long chains of selectors">
    <style type="text/css"><![CDATA[
  p { color: red; }
  p:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child:first-child { color: green } /* 2049 */
]]></style>
    <div class="testText">
      <p>This line should be green.</p>
    </div>
  </test>
  <test name="Classes: XHTML global class attribute">
    <style type="text/css"><![CDATA[
 p { color: green; }
 .fail { color: red; }
]]></style>
    <div class="testText">
      <p xmlns:xhtml="http://www.w3.org/1999/xhtml">
        <span xhtml:class="fail">This should be green.</span>
      </p>
    </div>
  </test>
  <test name="Namespaced attribute selectors">
    <style type="text/css"><![CDATA[
 tests, tests * { display: block; color: green; }
 testA[|attribute] { color: red; }
 testB[|attribute="fail"] { color: red; }
 testC[|attribute~="fail"] { color: red; }
 testD[|attribute^="fail"] { color: red; }
 testE[|attribute*="fail"] { color: red; }
 testF[|attribute$="fail"] { color: red; }
 testG[|attribute|="fail"] { color: red; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA test:attribute="fail">This should be green.</testA>
        <testB test:attribute="fail">This should be green.</testB>
        <testC test:attribute="fail">This should be green.</testC>
        <testD test:attribute="fail">This should be green.</testD>
        <testE test:attribute="fail">This should be green.</testE>
        <testF test:attribute="fail">This should be green.</testF>
        <testG test:attribute="fail">This should be green.</testG>
      </tests>
    </div>
  </test>
  <test name="Namespaced attribute selectors">
    <style type="text/css"><![CDATA[
 @namespace url(http://css.example.net/);
 tests, tests * { display: block; color: green; }
 testA[|attribute] { color: red; }
 testB[|attribute="fail"] { color: red; }
 testC[|attribute~="fail"] { color: red; }
 testD[|attribute^="fail"] { color: red; }
 testE[|attribute*="fail"] { color: red; }
 testF[|attribute$="fail"] { color: red; }
 testG[|attribute|="fail"] { color: red; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA test:attribute="fail">This should be green.</testA>
        <testB test:attribute="fail">This should be green.</testB>
        <testC test:attribute="fail">This should be green.</testC>
        <testD test:attribute="fail">This should be green.</testD>
        <testE test:attribute="fail">This should be green.</testE>
        <testF test:attribute="fail">This should be green.</testF>
        <testG test:attribute="fail">This should be green.</testG>
      </tests>
    </div>
  </test>
  <test name="Namespaced attribute selectors">
    <style type="text/css"><![CDATA[
 tests, tests * { display: block; color: red; }
 testA[*|attribute] { color: green; }
 testB[*|attribute="pass"] { color: green; }
 testC[*|attribute~="pass"] { color: green; }
 testD[*|attribute^="pass"] { color: green; }
 testE[*|attribute*="pass"] { color: green; }
 testF[*|attribute$="pass"] { color: green; }
 testG[*|attribute|="pass"] { color: green; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA test:attribute="pass">This should be green.</testA>
        <testB test:attribute="pass">This should be green.</testB>
        <testC test:attribute="pass">This should be green.</testC>
        <testD test:attribute="pass">This should be green.</testD>
        <testE test:attribute="pass">This should be green.</testE>
        <testF test:attribute="pass">This should be green.</testF>
        <testG test:attribute="pass">This should be green.</testG>
      </tests>
    </div>
  </test>
  <test name="Namespaced attribute selectors">
    <style type="text/css"><![CDATA[
 tests, tests * { display: block; color: red; }
 testA[*|attribute] { color: green; }
 testB[*|attribute="pass"] { color: green; }
 testC[*|attribute~="pass"] { color: green; }
 testD[*|attribute^="pass"] { color: green; }
 testE[*|attribute*="pass"] { color: green; }
 testF[*|attribute$="pass"] { color: green; }
 testG[*|attribute|="pass"] { color: green; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA attribute="pass">This should be green.</testA>
        <testB attribute="pass">This should be green.</testB>
        <testC attribute="pass">This should be green.</testC>
        <testD attribute="pass">This should be green.</testD>
        <testE attribute="pass">This should be green.</testE>
        <testF attribute="pass">This should be green.</testF>
        <testG attribute="pass">This should be green.</testG>
      </tests>
    </div>
  </test>
  <test name="Attribute selectors with multiple attributes">
    <style type="text/css"><![CDATA[
 tests, tests * { display: block; color: red; }
 testA[*|attribute="pass"] { color: green; }
 testB[*|attribute="pass"] { color: green; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA attribute="pass" test:attribute="fail">This should be green.</testA>
        <testB attribute="fail" test:attribute="pass">This should be green.</testB>
      </tests>
    </div>
  </test>
  <test name="NEGATED Attribute selectors with multiple attributes">
    <style type="text/css"><![CDATA[
 tests, tests * { display: block; color: green }
 testA:not([*|attribute="pass"]) { color: red; }
 testB:not([*|attribute="pass"]) { color: red; }
]]></style>
    <div class="testText">
      <tests xmlns="http://css.example.net/" xmlns:test="http://css.example.net/">
        <testA attribute="pass" test:attribute="fail">This should be green.</testA>
        <testB attribute="fail" test:attribute="pass">This should be green.</testB>
      </tests>
    </div>
  </test>
  <test name="Parsing: Numbers in classes">
    <style type="text/css"><![CDATA[
 p { color: green; }
 .13 { color: red; }
]]></style>
    <div class="testText">
      <p class="13">This line should be green.</p>
    </div>
  </test>
  <test name="Parsing: Numbers in classes">
    <style type="text/css"><![CDATA[
 p { color: green; }
 .\13 { color: red; }
]]></style>
    <div class="testText">
      <p class="13">This line should be green.</p>
    </div>
  </test>
  <test name="Parsing: Numbers in classes">
    <style type="text/css"><![CDATA[
 p { color: red; }
 .\31 \33 { color: green; }
]]></style>
    <div class="testText">
      <p class="13">This line should be green.</p>
    </div>
  </test>
  <test name="Combinations: classes and IDs">
    <style type="text/css"><![CDATA[
p { background: red; color: yellow; }
p:not(#other).class:not(.fail).test#id#id { background: green; color: white; }
div { background: green; color: white; }
div:not(#theid).class:not(.fail).test#theid#theid { background: red; color: yellow; }
div:not(#other).notclass:not(.fail).test#theid#theid { background: red; color: yellow; }
div:not(#other).class:not(.test).test#theid#theid { background: red; color: yellow; }
div:not(#other).class:not(.fail).nottest#theid#theid { background: red; color: yellow; }
div:not(#other).class:not(.fail).nottest#theid#other { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p class="class test" id="id">This line should be green.</p>
      <div class="class test" id="theid">This line should be green.</div>
    </div>
  </test>
  <test name="Parsing : vs ::">
    <style type="text/css"><![CDATA[
 p:selection { color: yellow; background: red; }
]]></style>
    <div class="testText">
      <p>When you select this text, it shouldn't go red.</p>
    </div>
  </test>
  <test name="Parsing : vs ::">
    <style type="text/css"><![CDATA[
 div { color: green; }
 p::first-child { color: yellow; background: red; }
]]></style>
    <div class="testText">
      <div>
        <p>This line should be green.</p>
      </div>
    </div>
  </test>
  <test name="Parsing: :not and pseudo-elements">
    <style type="text/css"><![CDATA[
 div { color: green; }
 p:not(:first-line) { color: yellow; background: red; }
 p:not(:after) { color: yellow; background: red; content: ' THIS TEST HAS FAILED! '; }
]]></style>
    <div class="testText">
      <div>
        <p>This line should be green.</p>
      </div>
    </div>
  </test>
  <test name="::first-line on inlines">
    <style type="text/css"><![CDATA[
  p { color: green; }
  span:first-line { background: red; color: yellow; font-size: 4em; }
  span::first-line { background: red; color: yellow; font-size: 4em; }
]]></style>
    <div class="testText">
      <p>
        <span>This line should be green.</span>
      </p>
    </div>
  </test>
  <test name="::first-line after &lt;br&gt;">
    <style type="text/css"><![CDATA[
  p { color: green; }
  p:first-line { background: red; color: yellow; font-size: 4em; }
  p::first-line { background: red; color: yellow; font-size: 4em; }
]]></style>
    <div class="testText">
      <p><br/>This line should be green.</p>
    </div>
  </test>
  <test name="::first-letter after &lt;br&gt;">
    <style type="text/css"><![CDATA[
  p { color: green; }
  p:first-letter { background: red; color: yellow; font-size: 4em; }
  p::first-letter { background: red; color: yellow; font-size: 4em; }
]]></style>
    <div class="testText">
      <p><br/>This line should be green.</p>
    </div>
  </test>
  <test name="Case sensitivity">
    <style type="text/css"><![CDATA[
 .cs { color: green; }
 .cs P { background: red; color: yellow; }
 .cs .a { background: red; color: yellow; }
 .cs .span1 span { background: red; color: yellow; }
 .cs .span2 { color: red; }
 .cs .span2 SPAN { color: green; }
 .cs .span2 span { background: red; color: yellow; }
 .ci { color: red; }
 .ci P { background: green; color: white; }
 .ci .a { background: green; color: white; }
 .ci .span1 span { background: green; color: white; }
 .ci .span2 SPAN { background: green; color: white; }
]]></style>
    <div class="testText">
      <div>
        <div class="cs">
          <p>This line should be green.</p>
          <p class="A">This line should be green.</p>
          <p class="span1">
            <SPAN>This line should be green.</SPAN>
          </p>
          <p class="span2">
            <SPAN>This line should be green.</SPAN>
          </p>
        </div>
      </div>
    </div>
  </test>
  <test name="Namespaces and \: in selectors">
    <style type="text/css"><![CDATA[
p { color: green; }
foo\:bar { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p>
        <foo:bar xmlns:foo="http://www.example.org/">
This text should be green.
</foo:bar>
      </p>
    </div>
  </test>
  <test name="Syntax and parsing of class selectors">
    <style type="text/css"><![CDATA[
p { color: green; }
..test { background: red; color: yellow; }
.foo..quux { background: red; color: yellow; }
.bar. { background: red; color: yellow; }
]]></style>
    <div class="testText">
      <p class="test">This text should be green.</p>
      <p class=".test">This text should be green.</p>
      <p class="foo">This text should be green.</p>
      <p class="foo quux">This text should be green.</p>
      <p class="foo  quux">This text should be green.</p>
      <p class=" bar ">This text should be green.</p>
    </div>
  </test>
  <test name="Ends-with attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: lime; }
p[class$=""] { color: red; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Starts-with attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: lime; }
p[class^=""] { color: red; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="Contains attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: lime; }
p[class*=""] { color: red; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="NEGATED ends-with attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: red; }
p:not([class$=""]) { color: lime; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="NEGATED starts-with attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: red; }
p:not([class^=""]) { color: lime; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="NEGATED contains attribute selector with empty value">
    <style type="text/css"><![CDATA[
p { color: red; }
p:not([class*=""]) { color: lime; }
]]></style>
    <div class="testText">
      <p class="">This text should be green.</p>
      <p>This text should be green.</p>
    </div>
  </test>
  <test name="NEGATED Dynamic handling of :empty">
    <style type="text/css"><![CDATA[
   #test { background: red; display: block; padding: 1em; }
   #test:not(:empty) { background: lime; }
]]></style>
    <div class="testText">
      <div>
        <script type="text/javascript"><![CDATA[

    function test() {
      document.getElementById('test').appendChild(document.createTextNode('This line should be green.'));
    }

    window.setTimeout("test()", 100);
   ]]></script>
        <p> The following bar should be green. </p>
        <div id="test"/>
      </div>
    </div>
  </test>
  <test name="Dynamic handling of :empty">
    <style type="text/css"><![CDATA[
   #test1 { background: red; display: block; padding: 1em; margin: 1em; }
   #test1:empty { background: lime; }
   #test2 { background: lime; display: block; padding: 1em; margin: 1em; }
   #test2:empty { background: red; }
]]></style>
    <div class="testText">
      <div>
        <script type="text/javascript"><![CDATA[

    function test() {
      document.getElementById('test1').appendChild(document.createTextNode(''));
      document.getElementById('test2').appendChild(document.createTextNode(' '));
    }

    window.setTimeout("test()", 100);
   ]]></script>
        <p> The following two bars should be green. </p>
        <div id="test1"/>
        <div id="test2"/>
      </div>
    </div>
  </test>
  <test name="Dynamic handling of combinators">
    <style type="text/css"><![CDATA[
   #test { background: red; display: block; padding: 1em; }
   #stub ~ div div + div > div { background: lime; }
]]></style>
    <div class="testText">
      <div>
        <script type="text/javascript"><![CDATA[

    function test() {
      el = document.getElementById('test');
      el.parentNode.parentNode.insertBefore(document.createElementNS('http://www.w3.org/1999/xhtml', 'div'), el.parentNode);
    }

    window.setTimeout("test()", 100);
   ]]></script>
        <p> The following bar should be green. </p>
        <div id="stub"/>
        <div/>
        <div>
          <div>
            <!-- <div/> -->
            <div>
              <div id="test"/>
            </div>
          </div>
        </div>
      </div>
    </div>
  </test>
  <test name="Dynamic handling of attribute selectors">
    <style type="text/css"><![CDATA[
   [test] { background: red; display: block; padding: 1em; }
   stub ~ [|attribute^=start]:not([|attribute~=mid])[|attribute*=dle][|attribute$=end] ~ t { background: lime; }
]]></style>
    <div class="testText">
      <div>
        <script type="text/javascript"><![CDATA[

    function test() {
      document.getElementsByTagNameNS('', 't')[1].setAttributeNS('', 'attribute', 'start middle end');
    }

    window.setTimeout("test()", 100);
   ]]></script>
        <p> The following block should be green. </p>
        <!-- root of selector -->
        <stub xmlns=""/>
        <!-- middle part of selector does not match this -->
        <t xmlns="" attribute="fake"/>
        <!-- middle part of selector matches this once attribute is fixed -->
        <t xmlns="" attribute="start mid dle end"/>
        <!-- subject of selector -->
        <t xmlns="" test="test"/>
      </div>
    </div>
  </test>
  <test name="Dynamic updating of :first-child and :last-child">
    <style type="text/css"><![CDATA[
   #two:first-child { background: red; }
   #three:last-child { background: lime; }
]]></style>
    <div class="testText">
      <div>
        <script type="text/javascript"><![CDATA[

    function test() {
      el2 = document.getElementById('two');
      el3 = document.getElementById('three');
      el2.parentNode.insertBefore(el3.nextSibling, el2);
    }

    window.setTimeout("test()", 100);
   ]]></script>
        <div>
          <p id="two">This line should be unstyled. (2)</p>
          <p id="three">This line should have a green background. (3)</p>
          <p>This line should be unstyled. (4 moving to 1)</p>
        </div>
      </div>
    </div>
  </test>
</tests>
